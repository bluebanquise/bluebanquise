#### Blue Banquise file ####
## {{ansible_managed}}

## Very minimal slurm.conf

## Controller
ClusterName={{slurm['cluster_name']}}
ControlMachine={{slurm['control_machine']}}

## Authentication
SlurmUser=slurm
AuthType=auth/munge
CryptoType=crypto/munge

## Files path
StateSaveLocation=/var/spool/slurmd/StateSave
SlurmdSpoolDir=/var/spool/slurmd/slurmd
SlurmctldPidFile=/var/run/slurmctld.pid
SlurmdPidFile=/var/run/slurmd.pid

## Logging
SlurmctldDebug=5
SlurmctldLogFile=/var/log/slurm/slurmctld.log
SlurmdDebug=5
SlurmdLogFile=/var/log/slurm/slurmd.log

## Timeouts
SlurmctldTimeout=600
SlurmdTimeout=600

## We don't want a node to go back in pool without sys admin acknowledgement
ReturnToService=0

{% if slurm['MpiDefault'] is defined and slurm['MpiDefault'] is not none %}
## Using pmi/pmi2/pmix interface for MPI
MpiDefault={{slurm['MpiDefault']}}
{% endif %}

## Basic scheduling based on CPU
SelectTypeParameters=CR_Core_Memory,CR_CORE_DEFAULT_DIST_BLOCK
SchedulerType=sched/backfill
SelectType=select/cons_res


## Nodes list
{% for equipment_group in slurm['nodes_equipment_groups'] %}
{% if groups[equipment_group] is iterable %}
{% for node in groups[equipment_group] %}
NodeName={{node}} Procs={{hostvars[node]['ep_hardware']['cpu']['cores']}} State=UNKNOWN
{% endfor %}
{% endif %}
{% endfor %}

## Partitions list
{% for equipment_group in slurm['nodes_equipment_groups'] %}
{% if groups[equipment_group] is iterable %}
PartitionName={{equipment_group}} MaxTime=INFINITE State=UP Nodes={% for node in groups[equipment_group] %}{% if loop.first %}{{node}}{% else %},{{node}}{% endif %}{% endfor %}

{% endif %}
{% endfor %}

## Partition for all
PartitionName=all MaxTime=INFINITE State=UP Default=YES Nodes={% for equipment_group in slurm['nodes_equipment_groups'] %}{% if groups[equipment_group] is defined and not none %}{% for node in groups[equipment_group] %},{{node}}{% endfor %}{% endif %}{% endfor %}

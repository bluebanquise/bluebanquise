#### Blue Banquise file ####
## {{ansible_managed}}

{# Define for current host: network list, and main network #}
{% set ntw = [] %}
{% for nic in network_interfaces %}
{% if network_interfaces[nic].network is defined and not none %}
{{ ntw.append(network_interfaces[nic].network|string) }}
{% endif %}
{% endfor %}
{% set ntw = (ntw | select('match',(current_iceberg_network+'-[0-9]+')) | list | unique | sort ) %}
{% set main_ntw = (ntw | first | join | trim) %}

options {
  listen-on port 53 {
    127.0.0.1;
{% for network in (networks | select('match',(current_iceberg_network+'-[0-9]+')) | list | unique | sort) %}
{% if networks[network]['is_in_dns'] is defined and networks[network]['is_in_dns'] == true %}
    {{networks[network]['services_ip']['dns_ip']}};
{% endif %}
{% endfor %}
  };

  listen-on-v6 port 53 { ::1; };
  directory 	"/var/named";
  dump-file 	"/var/named/data/cache_dump.db";
  statistics-file "/var/named/data/named_stats.txt";
  memstatistics-file "/var/named/data/named_mem_stats.txt";

  allow-query {
    localhost;
{% for network in (networks | select('match',(current_iceberg_network+'-[0-9]+')) | list | unique | sort) %}
{% if (networks[network]['is_in_dns'] is defined and not none) and (networks[network]['is_in_dns'] == true) %}
    {{networks[network]['subnet']}}/{{networks[network]['prefix']}};
{% endif %}
{% endfor %}
  };

  recursion no;

  dnssec-enable yes;
  dnssec-validation yes;
  dnssec-lookaside auto;

  /* Path to ISC DLV key */
  bindkeys-file "/etc/named.iscdlv.key";

  managed-keys-directory "/var/named/dynamic";

  pid-file "/run/named/named.pid";
  session-keyfile "/run/named/session.key";
};

logging {
  channel default_debug {
    file "data/named.run";
    severity dynamic;
  };
};

zone "." IN {
  type hint;
  file "named.ca";
};

zone"{{domain_name}}" IN {
type master;
file "forward";
allow-update { none; };
};

zone"in-addr.arpa" IN {
type master;
file "reverse";
allow-update { none; };
};

include "/etc/named.rfc1912.zones";
include "/etc/named.root.key";

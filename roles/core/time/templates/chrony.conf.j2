#jinja2: lstrip_blocks: "True"
#### Blue Banquise file ####
## {{ ansible_managed }}

{% macro node_main_network(macro_network_interfaces,macro_current_iceberg_network) %}
{{ macro_network_interfaces | selectattr('network','defined') | selectattr('network','match','^'+macro_current_iceberg_network+'-[a-zA-Z0-9]+') | map(attribute='network') | list | first }}
{% endmacro %}

{% set external = false %}
{% if external_time['time_'+time_profile]['pool'] is defined and
      external_time['time_'+time_profile]['pool'] is iterable %}
  {% set external = true %}
# External pool
  {% for external_pool in external_time['time_'+time_profile]['pool'] %}
pool {{ external_pool }} iburst maxsources 3
  {% endfor %}
{% elif external_time['time_'+time_profile]['server'] is defined and
        external_time['time_'+time_profile]['server'] is iterable %}
  {% set external = true %}
# External servers
  {% for external_server in external_time['time_'+time_profile]['server'] %}
server {{ external_server }}
  {% endfor %}
{% endif -%}

{% if time_profile == 'client' %}
  {% set time_sources = networks[j2_node_main_network]['services_ip']['time_ip'] %}
{% elif time_profile == 'server' and icebergs_system == true and iceberg_master != 'top' %}
  {# We need here to get master island ntp ip, depending of the subnet this node is member of.#}
  {% set time_sources = networks[(node_main_network(network_interfaces,management_networks_naming+(iceberg_master|replace(iceberg_naming,' ')| trim | string))| trim)]['services_ip']['time_ip'] %}
{% endif -%}

{% if not external and time_sources is defined and time_sources is string %}
# Source server to bind to
server {{ time_sources }} iburst
{% elif not external and time_sources is defined and time_sources is iterable %}
# Source servers to bind to
  {% for time_ip in time_sources %}
server {{ time_ip }} iburst
  {% endfor %}
{% endif %}

# Record the rate at which the system clock gains/losses time.
driftfile /var/lib/chrony/drift

# Allow the system clock to be stepped in the first three updates
# if its offset is larger than 1 second.
makestep 1.0 3

# Enable kernel synchronization of the real-time clock (RTC).
rtcsync

{% if time_profile == 'server' %}
# Allow NTP client access from local network.
  {% for nic in network_interfaces %}
    {% if nic.network is defined and nic.network is not none %}
allow {{ networks[nic.network]['subnet'] }}/{{ networks[nic.network]['prefix'] }}
    {% endif %}
  {% endfor %}

# Serve time even if not synchronized to a time source.
# Fairly unreliable time source
  {% if iceberg_level is defined and iceberg_level is not none %}
    {% if (iceberg_level|int) > 3 %}
local stratum 15
    {% else %}
local stratum {{ 12+(iceberg_level|int) }}
    {% endif %}
  {% else %}
local stratum 12
  {% endif %}
{% endif %}

# Specify directory for log files.
logdir /var/log/chrony

---
- name: firewalld █ "Add services to firewall's {{ time_firewall_zone | default('public',true) }} zone"
  firewalld:
    zone: "{{ time_firewall_zone | default('public',true) }}"
    service: "{{ item }}"
    immediate: "yes"
    permanent: "yes"
    state: enabled
  when:
    - ansible_facts.os_family == "RedHat"
    - ep_firewall | default(false) | bool
  loop: "{{ j2_role_variables['firewall_services_to_add'] }}"
  tags:
    - firewall

- name: "package █ Install {{ j2_role_variables['packages_to_install'] | join(' ') }}"
  package:
    name: "{{ j2_role_variables['packages_to_install'] }}"
    state: present
  tags:
    - package

- name: "template █ Generate {{ j2_role_variables['chrony_conf_path'] }}"
  template:
    src: chrony.conf.j2
    dest: "{{ j2_role_variables['chrony_conf_path'] }}"
    owner: root
    group: root
    mode: 0644
  notify: service █ Restart time services
  tags:
    - template

- name: "timezone █ Set system to {{ time_zone }} timezone"
  timezone:
    name: "{{ time_zone }}"

- name: meta █ Run handler tasks to restart time services
  meta: flush_handlers

- name: "service █ Manage {{ j2_role_variables['services_to_start'] | join(' ') }} state"
  service:
    name: "{{ item }}"
    enabled: "{{ (enable_services | bool) | ternary('yes','no') }}"
    state: "{{ (start_services | bool) | ternary('started', omit) }}"
  loop: "{{ j2_role_variables['services_to_start'] }}"
  tags:
    - service

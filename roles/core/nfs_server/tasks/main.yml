---

- name: Install packages
  package:
    name: "{{ packages_to_install[(ansible_distribution|lower|replace(' ','_'))]['_'+ansible_distribution_major_version] }}"
    state: present
  tags:
    - package

- name: Exports configuration (/etc/exports)
  lineinfile:
    path: /etc/exports
    regexp: ' # export name: {{item}}$'
    line: "{{ nfs[item]['export']}} {{networks[nfs[item]['take_over_network']]['subnet']}}/{{networks[nfs[item]['take_over_network']]['prefix']}}({{nfs[item]['export_arguments']}}) # export name: {{item}}"
  when: inventory_hostname == nfs[item]['server']
  with_items: "{{ nfs }}"
  notify: Restart nfs services
  tags:
    - template

- meta: flush_handlers

- name: Create directory                                                                                                                                                                                             file:
    path: "{{ nfs[item]['export'] }}"
    state: directory
    mode: '0755'
  with_items: "{{ nfs }}"
  
- name: Enable/disable services
  service:
    name: "{{ item }}"
    enabled: "{{ (enable_services | bool) | ternary('yes','no') }}"
  loop: "{{ services_to_start[(ansible_distribution|lower|replace(' ','_'))]['_'+ansible_distribution_major_version] }}"
  tags:
    - service

- name: Start services
  service:
    name: "{{ item }}"
    state: started
  loop: "{{ services_to_start[(ansible_distribution|lower|replace(' ','_'))]['_'+ansible_distribution_major_version] }}"
  when: (start_services | bool)
  tags:
    - service

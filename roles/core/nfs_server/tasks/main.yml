---
- name: include_vars ░ Gather OS specific variables
  # This task gathers variables defined in OS specific files.
  #
  # Search vars in:
  #  - <distribution>_<major>.yml    # eg. CentOS_8.yml
  #  - <os_family>_<major>.yml       # eg. RedHat_8.yml
  #  - <distribution>.yml            # eg. CentOS.yml
  #  - <os_family>.yml               # eg. RedHat.yml
  #
  # If no OS specific file is found, the role will default to vars/main.yml
  #
  include_vars: "{{ item }}"
  with_first_found:
    - files:
        - "vars/{{ ansible_facts.distribution | replace(' ','_') }}_{{ ansible_facts.distribution_major_version }}.yml"
        - "vars/{{ ansible_facts.os_family }}_{{ ansible_facts.distribution_major_version }}.yml"
        - "vars/{{ ansible_facts.distribution | replace(' ','_') }}.yml"
        - "vars/{{ ansible_facts.os_family }}.yml"
      skip: true
  tags:
    - always

- name: include_tasks ░ Use OS dedicated firewall task
  include_tasks: "{{ outer_item }}"
  with_first_found:
    - files:
        - "{{ ansible_facts.distribution | replace(' ','_') }}_{{ ansible_facts.distribution_version }}/firewall.yml"
        - "{{ ansible_facts.distribution | replace(' ','_') }}_{{ ansible_facts.distribution_major_version }}/firewall.yml"
        - "{{ ansible_facts.os_family | replace(' ','_') }}_{{ ansible_facts.distribution_version }}/firewall.yml"
        - "{{ ansible_facts.os_family | replace(' ','_') }}_{{ ansible_facts.distribution_major_version }}/firewall.yml"
        - "{{ ansible_facts.distribution | replace(' ','_') }}/firewall.yml"
        - "{{ ansible_facts.os_family | replace(' ','_') }}/firewall.yml"
      skip: true
  loop_control:
    loop_var: outer_item
  tags:
    - internal
    - firewall

- name: "package █ Install {{ nfs_server_packages_to_install | join(' ') }} packages"
  package:
    name: "{{ nfs_server_packages_to_install }}"
    state: present
  tags:
    - package

- name: lineinfile █ Edit file /etc/exports to add exported FS
  lineinfile:
    path: /etc/exports
    regexp: ' # export name: {{ item }}$'
    line: "{{ nfs[item]['export'] }} {{ networks[nfs[item]['take_over_network']]['subnet'] }}/{{ networks[nfs[item]['take_over_network']]['prefix'] }}({{ nfs[item]['export_arguments'] }}) # export name: {{ item }}"
  when: inventory_hostname == nfs[item]['server']
  with_items: "{{ nfs }}"
  notify: service █ Restart nfs server services
  tags:
    - template

- name: meta █ Run handler tasks to restart nfs server services
  meta: flush_handlers

- name: "service █ Manage {{ nfs_server_services_to_start | join(' ') }} state"
  service:
    name: "{{ item }}"
    enabled: "{{ (enable_services | bool) | ternary('yes','no') }}"
    state: "{{ (start_services | bool) | ternary('started', omit) }}"
  loop: "{{ nfs_server_services_to_start }}"
  tags:
    - service

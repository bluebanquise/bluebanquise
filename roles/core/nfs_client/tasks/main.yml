---
- name: include_vars ░ Gather OS specific variables
  # This task gathers variables defined in OS specific files.
  #
  # Search vars in:
  #  - <distribution>_<major>.yml    # eg. CentOS_8.yml
  #  - <os_family>_<major>.yml       # eg. RedHat_8.yml
  #  - <distribution>.yml            # eg. CentOS.yml
  #  - <os_family>.yml               # eg. RedHat.yml
  #
  # If no OS specific file is found, the role will default to vars/main.yml
  #
  include_vars: "{{ item }}"
  with_first_found:
    - files:
        - "vars/{{ ansible_facts.distribution | replace(' ','_') }}_{{ ansible_facts.distribution_major_version }}.yml"
        - "vars/{{ ansible_facts.os_family }}_{{ ansible_facts.distribution_major_version }}.yml"
        - "vars/{{ ansible_facts.distribution | replace(' ','_') }}.yml"
        - "vars/{{ ansible_facts.os_family }}.yml"
      skip: true
  tags:
    - internal

- name: "package █ Install {{ nfs_client_packages_to_install | join(' ') }} packages"
  package:
    name: "{{ nfs_client_packages_to_install }}"
    state: present
  tags:
    - package

- name: file █ Create NFS directories
  file:  # noqa 208
    path: "{{ item.0.mount }}"
    state: directory
  with_subelements:
    - "{{ nfs }}"
    - clients_groups
  when:
    - groups[item.1] is defined and groups[item.1] is not none
    - inventory_hostname in groups[item.1]

- name: service █ Manage rpcbind state
  service:
    name: rpcbind
    enabled: "{{ (enable_services | bool) | ternary('yes','no') }}"
    state: "{{ (start_services | bool) | ternary('started', omit) }}"
  when: ansible_facts.distribution in ['CentOS','RedHat']
  tags:
    - service

- name: seboolean █ Enable selinux /home dir boolean if needed
  seboolean:
    name: use_nfs_home_dirs
    state: yes
    persistent: yes
  when:
    - ansible_facts.selinux.status == "enabled"
    - nfs_settings.selinux.use_nfs_home_dirs == "true"

- name: mount █ Mount exported NFS into directories
  mount:
    path: "{{ item.0.mount }}"
    src: "{{ item.0.server }}{% if item.0.take_over_network is defined and item.0.take_over_network is not none %}-{{ item.0.take_over_network }}{% endif %}:{{ item.0.export }}"
    fstype: nfs
    opts: "{{ item.0.mount_arguments }}"
    state: mounted
  with_subelements:
    - "{{ nfs }}"
    - clients_groups
  when:
    - groups[item.1] is defined and not none
    - inventory_hostname in groups[item.1]

---
- name: Gathering OS specific variables
  # This task gathers variables defined in OS specific files.
  #
  # Search vars in:
  #  - <distribution>_<major>.yml    # eg. CentOS_8.yml
  #  - <os_family>_<major>.yml       # eg. RedHat_8.yml
  #  - <distribution>.yml            # eg. CentOS.yml
  #  - <os_family>.yml               # eg. RedHat.yml
  #
  # If no OS specific file is found, the role will default to vars/main.yml
  #
  include_vars: "{{ item }}"
  with_first_found:
    - files:
        - "vars/{{ ansible_facts.distribution | replace(' ','_') }}_{{ ansible_facts.distribution_major_version }}.yml"
        - "vars/{{ ansible_facts.os_family }}_{{ ansible_facts.distribution_major_version }}.yml"
        - "vars/{{ ansible_facts.distribution | replace(' ','_') }}.yml"
        - "vars/{{ ansible_facts.os_family }}.yml"
      skip: true

- name: Install packages
  package:
    name: "{{ log_client_packages_to_install }}"
    state: present
  tags:
    - package

- name: Template >> /etc/rsyslog.conf
  template:
    src: rsyslog.conf.j2
    dest: "{{ log_client_rsyslog_conf_path }}"
    owner: root
    group: root
    mode: 0644
  notify: Restart rsyslog services
  tags:
    - template

- name: Allow syslog port into SELinux
  seport:
    ports: "{{ log_client_server_port }}"
    proto: "{{ item }}"
    setype: syslogd_port_t
    state: present
  when:
    - ansible_facts.os_family == "RedHat"
    - ansible_facts.selinux.status == "enabled"
  loop:
    - tcp
    - udp
  notify: Restart rsyslog services

- meta: flush_handlers

- name: Manage services state
  service:
    name: "{{ item }}"
    enabled: "{{ (enable_services | bool) | ternary('yes','no') }}"
    state: "{{ (start_services | bool) | ternary('started', omit) }}"
  loop: "{{ log_client_services_to_start }}"
  tags:
    - service

#jinja2: lstrip_blocks: "True"
{# Hosts file, Accelerated mode compatible #}
{# Benoit Leveugle 2020 #}
{% import "macros/network.j2" as macro_network with context %}
{% import "macros/accelerated.j2" as macro_accelerated with context %}

{# Macro to avoid redundancy #}
{# This macro should cover all technical part, and be compatible with both normal and accelerated mode #}
{% macro write_host_3(host,host_dict,host_node_main_network_interface,host_iceberg) %}

  {#- Write host #}
  {% if host_dict['network_interfaces'] is defined and host_dict['network_interfaces'] is iterable %}

    {#- Gather global alias and alias (icebergs related) #}
    {% set alias_list = [] %}
    {% if host_dict['global_alias'] is defined and host_dict['global_alias'] is not none %}
      {% for alias in host_dict['global_alias'] %}{{ alias_list.append(alias) }}{% endfor %}
    {% endif %}
    {% if host_dict['alias'] is defined and host_dict['alias'] is not none and host_iceberg == j2_current_iceberg %}
      {% for alias in host_dict['alias'] %}{{ alias_list.append(alias) }}{% endfor %}
    {% endif %}

    {%- for interface, interface_vars in host_dict['network_interfaces'].items() %}
      {% if interface_vars.ip4 is defined and interface_vars.ip4 is not none and interface_vars.network is defined and interface_vars.network is not none %}
        {# Check if a global network has been defined and host is member of its group #}
        {% if (global_network_settings is defined and global_network_settings is not none) and (global_network_settings.enable_global_network is defined and global_network_settings.enable_global_network is not none) and (global_network_settings.global_network_group is defined and global_network_settings.global_network_group is not none) and (host in groups[global_network_settings.global_network_group]) %}
          {% if interface_vars.network == global_network_settings.global_network %}
{{ interface_vars.ip4 }} {{ host }} {{ host }}.{{ domain_name }} {{ host }}-{{ interface_vars.network }} {{ alias_list|join(' ') }}
          {% else %}
{{ interface_vars.ip4 }} {{ host }}-{{ interface_vars.network }}
          {% endif %}
        {% else %}
          {% if interface == host_node_main_network_interface %}
{{ interface_vars.ip4 }} {{ host }} {{ host }}.{{ domain_name }} {{ host }}-{{ interface_vars.network }} {{ alias_list|join(' ') }}
          {% else %}
{{ interface_vars.ip4 }} {{ host }}-{{ interface_vars.network }}
          {% endif %}
        {% endif %}
      {% endif %}
    {% endfor %}
  {% endif %}

  {#- Write BMC #}
  {% if host_dict['bmc'] is defined and host_dict['bmc'] is not none %}

  {#- Gather BMC global alias and alias (icebergs related) #}
    {% set bmc_alias_list = [] %}
    {% if host_dict['bmc']['global_alias'] is defined and host_dict['bmc']['global_alias'] is not none %}
      {% for alias in host_dict['bmc']['global_alias'] %}{{ bmc_alias_list.append(alias) }}{% endfor %}
    {% endif %}
    {% if host_dict['bmc']['alias'] is defined and host_dict['bmc']['alias'] is not none and host_iceberg == j2_current_iceberg %}
      {% for alias in host_dict['bmc']['alias'] %}{{ bmc_alias_list.append(alias) }}{% endfor %}
    {% endif %}

    {%- if (host_dict['bmc'].name is defined and host_dict['bmc'].name is not none) and (host_dict['bmc'].ip4 is defined and host_dict['bmc'].ip4 is not none) %}
{{ host_dict['bmc'].ip4 }} {{ host_dict['bmc'].name }} {{ bmc_alias_list|join(' ') }}
    {% endif %}
  {% endif -%}

{% endmacro %}

#### Blue Banquise file ####
## {{ ansible_managed }}

127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
::1         localhost localhost.localdomain localhost6 localhost6.localdomain6

{% if icebergs_system == true and hosts_file['range'] == 'iceberg' %}
  {% set range = groups[j2_current_iceberg] %}
  {% for host in groups[managements_group_name] %}
    {% if hostvars[host]['iceberg_master'] == j2_current_iceberg %}
{{ range.append(host) }}
    {% endif %}
  {% endfor %}
{% else %}
  {% set range = groups['all'] %}
{% endif %}

## Internal hosts

{% for host in range %}
{{write_host_3(host,hostvars[host],hostvars[host]['j2_node_main_network_interface'],hostvars[host]['j2_current_iceberg'])}}
{% endfor %}

{# ACCELERATED MODE POC
{% set main_host = hostvars[inventory_hostname] %}
{% for host in range %}
{% set host_icb = (macro_accelerated.node_current_iceberg(host)|trim) %}
{% set host_mg = (macro_accelerated.node_master_group(host)|trim) %}
{% set host_eqg = (macro_accelerated.node_equipment_group(host)|trim) %}
{% set host_definition = main_host[host_mg]['children'][host_eqg]['hosts'][host] %}
{% set host_nic = host_definition['network_interfaces'] %}
{% set host_bmc = host_definition['bmc'] %}
{% set host_icb_net = (management_networks_naming + (host_icb | replace(iceberg_naming,' ') | trim | string)) %}
{% set host_node_main_network = (macro_network.node_main_network(host_nic,host_icb_net) | trim) %}
{% set host_node_main_network_interface = (macro_network.node_main_network_interface(host_nic,host_node_main_network) | trim) %}
{% set alias_list = [] %}
{% if host_definition['global_alias'] is defined and not none %}
  {% for alias in host_definition['global_alias'] %}{{ alias_list.append(alias) }}{% endfor %}
{% endif %}
{% if host_definition['alias'] is defined and not none and host_icb == j2_current_iceberg %}
  {% for alias in host_definition['alias'] %}{{ alias_list.append(alias) }}{% endfor %}
{% endif %}
{{write_host_2(host,host_nic,host_node_main_network_interface,alias_list,host_bmc)}}
{% endfor %}
#}
## External hosts

{% if external_hosts is defined and external_hosts is not none and external_hosts %}
  {% for host in external_hosts %}
{{ external_hosts[host] }} {{ host }}
  {% endfor %}
{% endif %}

#jinja2: lstrip_blocks: "True"
{# Hosts file, with direct_access #}
{# Benoit Leveugle 2020 #}
{% import "macros/network.j2" as macro_network with context %}
{% import "macros/groups.j2" as macro_groups with context %}

{# -- Macro shared by both standard and direct_access methods. -- #}
{% macro write_host(host,host_dict,host_node_main_network_interface,host_iceberg) %}

  {#- Write host #}
  {% if host_dict['network_interfaces'] is defined and not none and host_dict['network_interfaces'] and host_dict['network_interfaces'] is iterable %}

    {#- Gather global alias and alias (icebergs related) #}
    {% set alias_list = [] %}
    {% if host_dict['global_alias'] is defined and not none %}
      {% for alias in host_dict['global_alias'] %}{{ alias_list.append(alias) }}{% endfor %}
    {% endif %}
    {% if host_dict['alias'] is defined and not none and host_iceberg == j2_current_iceberg %}
      {% for alias in host_dict['alias'] %}{{ alias_list.append(alias) }}{% endfor %}
    {% endif %}

    {%- for interface, interface_vars in host_dict['network_interfaces'].items() %}
      {% if interface_vars.ip4 is defined and not none and interface_vars.network is defined and not none %}
        {# Check if a global network has been defined and host is member of its group #}
        {% if (global_network_settings is defined and not none) and (global_network_settings.enable_global_network is defined and not none) and (global_network_settings.global_network_group is defined and not none) and (host in groups[global_network_settings.global_network_group]) %}
          {% if interface_vars.network == global_network_settings.global_network %}
{{interface_vars.ip4}} {{host}} {{host}}.{{domain_name}} {{host}}-{{interface_vars.network}} {{alias_list|join(' ')}}
          {% else %}
{{interface_vars.ip4}} {{host}}-{{interface_vars.network}}
          {% endif %}
        {% else %}
          {% if interface == host_node_main_network_interface %}
{{interface_vars.ip4}} {{host}} {{host}}.{{domain_name}} {{host}}-{{interface_vars.network}} {{alias_list|join(' ')}}
          {% else %}
{{interface_vars.ip4}} {{host}}-{{interface_vars.network}}
          {% endif %}
        {% endif %}
      {% endif %}
    {% endfor %}
  {% endif %}

  {#- Write BMC #}
  {% if host_dict['bmc'] is defined and not none %}

  {#- Gather BMC global alias and alias (icebergs related) #}
    {% set bmc_alias_list = [] %}
    {% if host_dict['bmc']['global_alias'] is defined and not none %}
      {% for alias in host_dict['bmc']['global_alias'] %}{{ bmc_alias_list.append(alias) }}{% endfor %}
    {% endif %}
    {% if host_dict['bmc']['alias'] is defined and not none and host_iceberg == j2_current_iceberg %}
      {% for alias in host_dict['bmc']['alias'] %}{{ bmc_alias_list.append(alias) }}{% endfor %}
    {% endif %}

    {%- if (host_dict['bmc'].name is defined and not none) and (host_dict['bmc'].ip4 is defined and not none) %}
 {{host_dict['bmc'].ip4}} {{host_dict['bmc'].name}} {{bmc_alias_list|join(' ')}}
    {% endif %}
  {% endif -%}

{% endmacro %}


#### Blue Banquise file ####
## {{ansible_managed}}

127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
::1         localhost localhost.localdomain localhost6 localhost6.localdomain6

{% if icebergs_system == true and hosts_file['range'] == 'iceberg' %}
  {% set range = groups[j2_current_iceberg] %}
  {% for host in groups[managements_group_name] %}
    {% if hostvars[host]['iceberg_master'] == j2_current_iceberg %}
{{ range.append(host) }}
    {% endif %}
  {% endfor %}
{% else %}
  {% set range = groups['all'] %}
{% endif %}

## Internal hosts

{% if direct_access is not defined %}
{# -- Standard method. Rely on hostvars. -- #}

  {% for host in range %}
{{ write_host(host,hostvars[host],hostvars[host]['j2_node_main_network_interface'],hostvars[host]['j2_current_iceberg']) }}
  {% endfor %}

{% else %}
{# -- Direct access method. Rely on direct_access content. -- #}

  {% for mg, mg_vars in direct_access.items() %}
    {% for eqg, eqg_vars in mg_vars.children.items() %}
      {% for host, host_vars in eqg_vars.hosts.items() %}
        {% if host in range %}
          {# Get host iceberg, from groups #}
          {% set host_icb = (macro_groups.node_current_iceberg(host)|trim) %}
          {# Check if user forced main network. #}
          {% if host_vars.j2_node_main_network is defined %}
            {% set host_node_main_network = host_vars.j2_node_main_network %}
            {% set host_node_main_network_interface = (macro_network.node_main_network_interface(host_vars.network_interfaces,host_node_main_network) | trim) %}
          {% elif host_vars.j2_node_main_network_interface is defined %}
            {% set host_node_main_network_interface = host_vars.j2_node_main_network_interface %}
          {% else %}
            {% set host_icb_net = (management_networks_naming + (host_icb | replace(iceberg_naming,' ') | trim | string)) %}
            {% set host_node_main_network = (macro_network.node_main_network(host_vars.network_interfaces,host_icb_net) | trim) %}
            {% set host_node_main_network_interface = (macro_network.node_main_network_interface(host_vars.network_interfaces,host_node_main_network) | trim) %}
          {% endif %}
{{ write_host(host,host_vars,host_node_main_network_interface,host_icb) }}
        {% endif %}
      {% endfor %}
    {% endfor %}
  {% endfor %}

{% endif %}

## External hosts

{% if external_hosts is defined and external_hosts is not none and external_hosts %}
  {% for host in external_hosts %}
{{external_hosts[host]}} {{host}}
  {% endfor %}
{% endif %}

#jinja2: lstrip_blocks: "True"
{# /etc/hosts file template. #}
{# Benoit Leveugle 2020 #}

{# Macro to provide an host current iceberg #}
{# Equivalent to j2_current_iceberg, but without hostvars requirement #}
{% macro node_current_iceberg(host) %}
  {% if icebergs_system == false %}
{{iceberg_naming+'1'}}
  {% else %}
    {% for icb_group in ( groups | select('match','^'+iceberg_naming+'[0-9]+') | list | sort ) %}
      {% if host in groups[icb_group] %}
{{icb_group | trim}}
        {% break %}
      {% endif %}
    {% endfor %}
  {% endif %}
{% endmacro %}

{# Macro to write host in file #}
{% macro write_host(host,host_dict,current_iceberg) %}

  {%- if host_dict['network_interfaces'] is defined and host_dict['network_interfaces'] is iterable %}
    {% set host_iceberg = node_current_iceberg(host) %}
    {% set host_resolution_network = network_interfaces[0].network %}{# equivalent to j2_node_main_resolution_network, but no need for a macro here #}
    {% set alias_list = [] %}
    {% if host_dict['global_alias'] is defined and host_dict['global_alias'] is not none %}
      {% for alias in host_dict['global_alias'] %}{{ alias_list.append(alias) }}{% endfor %}
    {% endif %}
    {% if host_dict['alias'] is defined and host_dict['alias'] is not none and host_iceberg == current_iceberg %}
      {% for alias in host_dict['alias'] %}{{ alias_list.append(alias) }}{% endfor %}
    {% endif %}

    {%- for nic in host_dict['network_interfaces'] %}
      {% if nic.ip4 is defined and nic.ip4 is not none and nic.network is defined and nic.network is not none %}
        {% if nic.network == host_resolution_network %}
{{ nic.ip4 }} {{ host }} {{ host }}.{{ domain_name }} {{ host }}-{{ nic.network }} {{ alias_list|join(' ') }}
        {% else %}
{{ nic.ip4 }} {{ host }}-{{ nic.network }}
        {% endif %}
      {% endif %}
    {% endfor %}
  {% endif %}

  {%- if host_dict['bmc'] is defined and host_dict['bmc'] is not none %}
    {% set bmc_alias_list = [] %}
    {% if host_dict['bmc']['global_alias'] is defined and host_dict['bmc']['global_alias'] is not none %}
      {% for alias in host_dict['bmc']['global_alias'] %}{{ bmc_alias_list.append(alias) }}{% endfor %}
    {% endif %}
    {% if host_dict['bmc']['alias'] is defined and host_dict['bmc']['alias'] is not none and host_iceberg == current_iceberg %}
      {% for alias in host_dict['bmc']['alias'] %}{{ bmc_alias_list.append(alias) }}{% endfor %}
    {% endif %}
    {% if (host_dict['bmc'].name is defined and host_dict['bmc'].name is not none) and (host_dict['bmc'].ip4 is defined and host_dict['bmc'].ip4 is not none) %}
{{ host_dict['bmc'].ip4 }} {{ host_dict['bmc'].name }} {{ bmc_alias_list|join(' ') }}
    {% endif %}
  {% endif -%}

{% endmacro %}

#### Blue Banquise file ####
## {{ ansible_managed }}

127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
::1         localhost localhost.localdomain localhost6 localhost6.localdomain6

{% if icebergs_system == true and hosts_file['range'] == 'iceberg' %}
  {% set range = groups[j2_current_iceberg] %}
  {% for host in groups[managements_group_name] %}
    {% if hostvars[host]['iceberg_master'] == j2_current_iceberg %}
{{ range.append(host) }}
    {% endif %}
  {% endfor %}
{% else %}
  {% set range = groups['all'] %}
{% endif %}

## Internal hosts

{% if direct_access is not defined %}
{# -- Standard method. Rely on hostvars. -- #}

{% set current_iceberg = j2_current_iceberg %}
{% for host in range %}
{{ write_host(host,hostvars[host],current_iceberg) }}
{% endfor %}

{% else %}
{# -- Direct access method. Rely on direct_access content. -- #}

  {% for mg, mg_vars in direct_access.items() %}
    {% for eqg, eqg_vars in mg_vars.children.items() %}
      {% for host, host_vars in eqg_vars.hosts.items() %}
        {% if host in range %}
          {# Get host iceberg, from groups #}
          {% set host_icb = (macro_groups.node_current_iceberg(host)|trim) %}
          {# Check if user forced main network. #}
          {% if host_vars.j2_node_main_network is defined %}
            {% set host_node_main_network = host_vars.j2_node_main_network %}
            {% set host_node_main_network_interface = (macro_network.node_main_network_interface(host_vars.network_interfaces,host_node_main_network) | trim) %}
          {% elif host_vars.j2_node_main_network_interface is defined %}
            {% set host_node_main_network_interface = host_vars.j2_node_main_network_interface %}
          {% else %}
            {% set host_icb_net = (management_networks_naming + (host_icb | replace(iceberg_naming,' ') | trim | string)) %}
            {% set host_node_main_network = (macro_network.node_main_network(host_vars.network_interfaces,host_icb_net) | trim) %}
            {% set host_node_main_network_interface = (macro_network.node_main_network_interface(host_vars.network_interfaces,host_node_main_network) | trim) %}
          {% endif %}
{{ write_host(host,host_vars,host_node_main_network_interface,host_icb) }}
        {% endif %}
      {% endfor %}
    {% endfor %}
  {% endfor %}

{% endif %}

## External hosts

{% if external_hosts is defined and external_hosts is not none and external_hosts %}
  {% for host in external_hosts %}
{{ external_hosts[host] }} {{ host }}
  {% endfor %}
{% endif %}

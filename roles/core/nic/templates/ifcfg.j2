#jinja2: lstrip_blocks: "True"
#### Blue Banquise file ####
## {{ ansible_managed }}

{# 1. First the name and default parameters. #}
NAME={{ item.interface }}
DEVICE={{ item.interface }}
{% if item.autoconnect is defined and item.autoconnect == false %}
ONBOOT=no
{% else %}
ONBOOT=yes
{% endif %}
{% if ansible_facts.distribution_major_version|int < 8 %}
NM_MANAGED=yes
{% endif %}
BOOTPROTO=none

{# 2. Let's get the type. Default is Ethernet. #}
{% if (item.type is defined and item.type is not none) %}
  {% if (item.type | lower) in ['infiniband', 'bond', 'vlan'] %}
TYPE={{ item.type | lower }}
  {% endif %}
{% else %}
TYPE=ethernet
{% endif %}

{# 3. Now basic network parameters, if exist. #}
{# 3.1 Lets check if we need to set a simple ip, or multiple. #}
{% if item.ip4 is defined and item.ip4 is not none %}
{# 3.1.1 Ok, now lets check we have a prefix or a netmask for this ip. Can come from network or directly set in network_interfaces. #}
  {% if (item.network is defined and item.network is not none) and (networks[item.network] is defined and networks[item.network] is not none) %}
    {% if networks[item.network]['prefix'] is defined and networks[item.network]['prefix'] is not none %}
    {# 3.1.2 Ok, go for prefix from network. #}
IPADDR={{ item.ip4 }}
PREFIX={{ networks[item.network]['prefix'] }}
    {% elif networks[item.network]['netmask'] is defined and networks[item.network]['netmask'] is not none %}
    {# 3.1.3 Ok, go for netmask from network. #}
IPADDR={{ item.ip4 }}
NETMASK={{ networks[item.network]['netmask'] }}
    {% endif %}
  {% endif %}
{% endif %}

{# 3.1.4 Maybe prefix was set directly on ip4 line. This is allowed in ip4_multi #}
{% if item.ip4_multi is defined and item.ip4_multi is iterable %}
  {% for ip in item.ip4_multi %}
    {% if '/' in ip %}
IPADDR{{ loop.index }}={{ ip.split('/')[0] }}
PREFIX{{ loop.index }}={{ ip.split('/')[1] }}
    {% endif %}
  {% endfor %}
{% endif %}

{# 4. Do we have a gateway ? #}
{% if (item.network is defined and item.network is not none) and (networks[item.network]['gateway'] is defined and networks[item.network]['gateway'] is not none) %}
GATEWAY={{ networks[item.network]['gateway'] }}
{% elif item.gw4 is defined and item.gw4 is not none %}
GATEWAY={{ item.gw4 }}
{% endif %}

{# 5. Do we have an MTU defined ? #}
{% if (item.network is defined and item.network) and (networks[item.network]['mtu'] is defined and networks[item.network]['mtu'] is not none) %}
MTU={{ networks[item.network]['mtu'] }}
{% elif item.mtu is defined and item.mtu is not none %}
MTU={{ item.mtu }}
{% endif %}

{# 6. Is it a VLAN ? #}
{% if item.vlan is defined and item.vlan == true %}
VLAN=yes
PHYSDEV={{ item.physical_device }}
VLAN_ID={{ item.vlan_id }}
{% endif %}

{# 7. Is it a bonding (bond) or a bonding-slave (bond-slave) ? #}
{# 7.1 Master first. #}
{% if item.type is defined and item.type == 'bond' %}
BONDING_MASTER=yes
  {% if item.bond_options is defined and item.bond_options is not none %}
BONDING_OPTS="{{ item.bond_options }}"
  {% endif %}
{% endif %}
{# 7.2 Now slave. #}
{% if item.type is defined and item.type == 'bond-slave' %}
SLAVE=yes
MASTER={{ item.master }}
{% endif %}

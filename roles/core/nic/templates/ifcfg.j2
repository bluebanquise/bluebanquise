#### Blue Banquise file ####
## {{ansible_managed}}

{# 1. First the name and default parameters. #}
NAME={{item}}
DEVICE={{item}}
{% if (network_interfaces[item]['autoconnect'] is defined and not none) and (network_interfaces[item]['autoconnect'] == false) %}
ONBOOT=no
{% else %}
ONBOOT=yes
{% endif %}
NM_CONTROLLED={{nic_nm_controlled | ternary('yes','no')}}
BOOTPROTO=none

{# 2. Let's get the type. Default is Ethernet. #}
{% set nic_type = 'Ethernet' %}
{% if network_interfaces[item]['type'] is defined and not none %}
{% if network_interfaces[item]['type'] == 'bond' %}
{% set nic_type = 'Bond' %}
{% elif network_interfaces[item]['type'] == 'infiniband' %}
{% set nic_type = 'Infiniband' %}
{% endif %}
{% endif %}
TYPE={{nic_type}}

{# 3. Now basic network parameters, if exist. #}
{# 3.1 Lets check if we need to set a simple ip, or multiple. #}
{% if network_interfaces[item]['ip4'] is defined and not none %}
{# 3.1.1 Ok, now lets check we have a prefix or a netmask for this ip. Can come from network or directly set in network_interfaces. #}
{% if (network_interfaces[item]['network'] is defined and not none) and (networks[network_interfaces[item]['network']] is defined and not none) %}
{% if networks[network_interfaces[item]['network']]['prefix'] is defined and not none %}
{# 3.1.2 Ok, go for prefix from network. #}
IPADDR={{network_interfaces[item]['ip4']}}
PREFIX={{networks[network_interfaces[item]['network']]['prefix']}}
{% elif  networks[network_interfaces[item]['network']]['netmask'] is defined and not none %}
{# 3.1.3 Ok, go for netmask from network. #}
IPADDR={{network_interfaces[item]['ip4']}}
NETMASK={{networks[network_interfaces[item]['network']]['netmask']}}
{% endif %}
{% endif %}
{% endif %}

{# 3.1.4 Maybe prefix was set directly on ip4 line. This is allowed in ip4_multi #}
{% if network_interfaces[item]['ip4_multi'] is defined and not none and network_interfaces[item]['ip4_multi'] is iterable %}
{% for ip in network_interfaces[item]['ip4_multi'] %}
{% if '/' in ip %}
IPADDR{{loop.index}}={{ip.split('/')[0]}}
PREFIX{{loop.index}}={{ip.split('/')[1]}}
{% endif %}
{% endfor %}
{% endif %}

{# 4. Do we have a gateway ? #}
{% if (network_interfaces[item]['network'] is defined and not none) and (networks[network_interfaces[item]['network']]['gateway'] is defined and not none) %}
GATEWAY={{networks[network_interfaces[item]['network']]['gateway']}}
{% elif network_interfaces[item]['gw4'] is defined and not none %}
GATEWAY={{network_interfaces[item]['gw4']}}
{% endif %}

{# 5. Do we have an MTU defined ? #}
{% if (network_interfaces[item]['network'] is defined and not none) and (networks[network_interfaces[item]['network']]['mtu'] is defined and not none) %}
MTU={{networks[network_interfaces[item]['network']]['mtu']}}
{% elif network_interfaces[item]['mtu'] is defined and not none %}
MTU={{network_interfaces[item]['mtu']}}
{% endif %}

{# 6. Is it a VLAN ? #}
{% if (network_interfaces[item]['vlan'] is defined and not none) and (network_interfaces[item]['vlan'] == true) %}
VLAN=yes
{% endif %}

{# 7. Is it a bonding (bond) or a bonding-slave (bond-slave) ? #}
{# 7.1 Master first. #}
{% if (network_interfaces[item]['type'] is defined and not none) and (network_interfaces[item]['type'] == 'bond') %}
BONDING_MASTER=yes
{% if network_interfaces[item]['bond_options'] is defined and not none %}
BONDING_OPTS={{network_interfaces[item]['bond_options']}}
{% endif %}
{% endif %}
{# 7.2 Now slave. #}
{% if (network_interfaces[item]['type'] is defined and not none) and (network_interfaces[item]['type'] == 'bond-slave') %}
SLAVE=yes
MASTER={{network_interfaces[item]['master']}}
{% endif %}


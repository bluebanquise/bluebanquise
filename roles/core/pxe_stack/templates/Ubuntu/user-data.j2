#cloud-config
autoinstall:
  version: 1
  apt:
    geoip: true
    preserve_sources_list: false
    primary:
    - arches: [amd64, i386]
      uri: http://hr.archive.ubuntu.com/ubuntu
    - arches: [default]
      uri: http://ports.ubuntu.com/ubuntu-ports
  keyboard: {layout: {{hostvars[groups[item][0]]['ep_configuration']['keyboard_layout']|lower}}, toggle: null, variant: ''}
  locale: {{hostvars[groups[item][0]]['ep_configuration']['system_language']}}
  user-data:
    disable_root: false
  ssh:
    allow-pw: true
    install-server: true
{% if hostvars[groups[item][0]]['ep_partitioning'] is not none %}
{{ hostvars[groups[item][0]]['ep_partitioning'] | indent(2, True) }}
{% endif %}
  late-commands:
    - mkdir /target/root/.ssh
{% for ssh_key in hostvars[groups[item][0]]['authentication_ssh_keys'] %}
    - echo "{{ ssh_key }}" >> /target/root/.ssh/authorized_keys
{% endfor %}
{% if pxe_stack_sshd_force_permitrootlogin %}
    - sed -i "s/^#PermitRootLogin.*\$/PermitRootLogin yes/g" /target/etc/ssh/sshd_config
{% endif %}
{% if pxe_stack_preseed_remove_apt_sources %}
    - echo " " > /target/etc/apt/sources.list
{% endif %}
    - sed -i 's|^root:.:|root:{{hostvars[groups[item][0]]['authentication_root_password_sha512']}}:|' /target/etc/shadow
    - curtin in-target --target=/target -- sh -c 'set -- `cat /proc/cmdline`; for I in $*; do case "$I" in *=*) eval $I;; esac; done; curl -s -k http://$ipxe_next_server/cgi-bin/bootswitch.cgi --data "node=$node_hostname&boot=disk";'


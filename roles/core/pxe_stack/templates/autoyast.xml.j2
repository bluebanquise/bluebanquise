<?xml version="1.0"?>
<!DOCTYPE profile>
<profile xmlns="http://www.suse.com/1.0/yast2ns" xmlns:config="http://www.suse.com/1.0/configns">

  <keyboard>
    <keymap>{{hostvars[groups[item][0]]['ep_configuration']['keyboard_layout']|lower}}</keymap>
  </keyboard>

  <language>
    <language>{{hostvars[groups[item][0]]['ep_configuration']['system_language']|replace('.UTF-8','')}}</language>
    <languages/>
  </language>

  <timezone>
    <hwclock>UTC</hwclock>
    <timezone>{{time_zone}}</timezone>
  </timezone>

  <networking>
    <keep_install_network config:type="boolean">true</keep_install_network>
  </networking>

  <software>
    <install_recommended config:type="boolean">true</install_recommended>
    <patterns config:type="list">
      <pattern>base</pattern>
    </patterns>
  </software> 

{{hostvars[groups[item][0]]['ep_partitioning']}}

 <users config:type="list">
  <user>
    <username>root</username>
    <user_password>{{hostvars[groups[item][0]]['authentication_root_password_sha512']}}</user_password>
    <uid>1001</uid>
    <gid>100</gid>
    <encrypted config:type="boolean">true</encrypted>
    <fullname>Root User</fullname>
    <authorized_keys config:type="list">
{% for ssh_key in hostvars[groups[item][0]]['authentication_ssh_keys'] %}
      <listentry>{{ssh_key}}</listentry>
{% endfor %}
    </authorized_keys>
   </user>
 </users>

<services-manager>
  <default_target>multi-user</default_target>
  <services>
    <enable config:type="list">
      <service>sshd</service>
    </enable>
  </services>
</services-manager>

<scripts>
    <chroot-scripts config:type="list">
      <script>
                    <debug config:type="boolean">true</debug>
                    <filename>post.sh</filename>
                    <interpreter>shell</interpreter>
                    <source><![CDATA[
#!/bin/sh

# Turn the kernel parameters into variables
# We are looking for next_server value
set -- `cat /proc/cmdline`
for I in $*; do case "$I" in *=*) eval $I;; esac; done

echo "All went well, we can inform next-server we succeeded"
curl -s -k http://$ipxe_next_server/cgi-bin/bootswitch.cgi --data "node=$(hostname -s)&boot=disk"
#curl -s -k http://10.10.0.1/cgi-bin/bootswitch.cgi --data "node=$(hostname -s)&boot=disk"
#curl -s -k http://10.10.0.1/cgi-bin/$ipxe_next_server.cgi

]]>
                </source>
      </script>
    </chroot-scripts>
  </scripts>

 <general>
  <mode>
   <confirm config:type="boolean">false</confirm>
  </mode>
 </general>

</profile>






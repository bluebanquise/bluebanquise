---
- name: "firewalld █ Add services to firewall's {{ pxe_stack_firewall_zone | default('public',true) }} zone"
  firewalld:
    zone: "{{ pxe_stack_firewall_zone | default('public',true) }}"
    service: "{{ item }}"
    immediate: "yes"
    permanent: "yes"
    state: enabled
  when:
    - ansible_facts.os_family == "RedHat"
    - ep_firewall | default(false) | bool
  loop: "{{ j2_role_variables['firewall_services_to_add'] }}"
  tags:
    - firewall

- name: "package █ Install {{ (j2_role_variables['packages_to_install']  + [pxe_stack_tftp_package | default(j2_role_variables['default_tftp_package'])]) | join(' ') }} packages"
  package:
    name: "{{ j2_role_variables['packages_to_install']  + [pxe_stack_tftp_package | default(j2_role_variables['default_tftp_package'])] }}"
    state: present
  tags:
    - package

- name: file █ Create pxe directories structure
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
  loop:
    - /var/www/cgi-bin
    - /etc/bluebanquise
    - /etc/bootset

- name: file █ Create pxe http directories structure
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
    owner: "{{ j2_role_variables['apache_user'] }}"
    group: "{{ j2_role_variables['apache_user'] }}"
  loop:
    - /var/www/html/preboot_execution_environment
    - /var/www/html/preboot_execution_environment/bin
    - /var/www/html/preboot_execution_environment/nodes
    - /var/www/html/preboot_execution_environment/equipment_profiles
    - /var/www/html/preboot_execution_environment/osdeploy

- name: include_tasks ░ Use OS dedicated task
  include_tasks: "{{ (ansible_facts.distribution|replace(' ','_')) }}_{{ ansible_facts.distribution_major_version }}.yml"
  tags:
    - internal

- name: template █ Generate /etc/bootset/nodes_parameters.yml
  template:
    src: nodes_parameters.yml.j2
    dest: /etc/bootset/nodes_parameters.yml
    mode: 0644
  tags:
    - template

- name: template █ Generate /etc/bootset/pxe_parameters.yml
  template:
    src: "pxe_parameters.yml.j2"
    dest: "/etc/bootset/pxe_parameters.yml"
    mode: 0644

- name: template █ Generate /var/www/html/preboot_execution_environment/{menu|convergence}.ipxe
  template:
    src: "{{ item }}.ipxe.j2"
    dest: "/var/www/html/preboot_execution_environment/{{ item }}.ipxe"
    mode: 0755
    owner: "{{ j2_role_variables['apache_user'] }}"
    group: "{{ j2_role_variables['apache_user'] }}"
  loop:
    - convergence
    - menu
  tags:
    - template

- name: template █ Generate /var/www/html/preboot_execution_environment/nodes/.ipxe
  template:
    src: nohostname.ipxe.j2
    dest: /var/www/html/preboot_execution_environment/nodes/.ipxe
    mode: 0755
    owner: "{{ j2_role_variables['apache_user'] }}"
    group: "{{ j2_role_variables['apache_user'] }}"
  tags:
    - template

- name: copy █ Copy osdeploy files /var/www/html/preboot_execution_environment/osdeploy/
  copy:
    src: osdeploy/
    dest: "/var/www/html/preboot_execution_environment/osdeploy/"
    mode: 0644
    owner: "{{ j2_role_variables['apache_user'] }}"
    group: "{{ j2_role_variables['apache_user'] }}"

##### RedHat derivated OS

- name: template █ Generate kickstarts /var/www/html/preboot_execution_environment/equipment_profiles/{item}.kickstart.cfg
  template:
    src: "kickstart.cfg.j2"
    dest: /var/www/html/preboot_execution_environment/equipment_profiles/{{ item | replace(equipment_naming+'_','') | trim }}.kickstart.cfg
    mode: 0644
    owner: "{{ j2_role_variables['apache_user'] }}"
    group: "{{ j2_role_variables['apache_user'] }}"
  with_items: "{{ j2_equipment_groups_list }}"
  when:
    - hostvars[groups[item][0]]['ep_equipment_type'] == 'server'
    - (hostvars[groups[item][0]]['ep_operating_system']['distribution']|lower) in ['redhat','centos','fedora','cloudlinux','oraclelinux']
  tags:
    - template

- name: template █ Generate equipment_profiles /var/www/html/preboot_execution_environment/equipment_profiles/{item}.ipxe
  template:
    src: "equipment_profile.ipxe.j2"
    dest: /var/www/html/preboot_execution_environment/equipment_profiles/{{ item | replace(equipment_naming+'_','') | trim }}.ipxe
    mode: 0644
    owner: "{{ j2_role_variables['apache_user'] }}"
    group: "{{ j2_role_variables['apache_user'] }}"
  with_items: "{{ j2_equipment_groups_list }}"
  when:
    - hostvars[groups[item][0]]['ep_equipment_type'] == 'server'
    - (hostvars[groups[item][0]]['ep_operating_system']['distribution']|lower) in ['redhat','centos','fedora','cloudlinux','oraclelinux']
  tags:
    - template

##### Ubuntu

# OUTDATED, need review
# - name: template █ Generate preseeds for Ubuntu
#   template:
#     src: "preseed.cfg.j2"
#     dest: /var/www/html/preboot_execution_environment/equipment_profiles/{{ item | replace(equipment_naming+'_','') | trim }}.preseed.cfg
#     mode: 0644
#     owner: "{{ pxe_stack_apache_user }}"
#     group: "{{ pxe_stack_apache_user }}"
#   with_items: "{{ j2_equipment_groups_list }}"
#   when:
#     - hostvars[groups[item][0]]['ep_equipment_type'] == 'server'
#     - (hostvars[groups[item][0]]['ep_operating_system']['distribution']|lower) == 'ubuntu'
#   tags:
#     - template
#
# - name: Templates >> equipment_profiles for Ubuntu
#   template:
#     src: "configuration_ubuntu.ipxe.j2"
#     dest: /var/www/html/preboot_execution_environment/equipment_profiles/{{ item | replace(equipment_naming+'_','') | trim }}.ipxe
#     mode: 0644
#     owner: "{{ pxe_stack_apache_user }}"
#     group: "{{ pxe_stack_apache_user }}"
#   with_items: "{{ j2_equipment_groups_list }}"
#   when:
#     - hostvars[groups[item][0]]['ep_equipment_type'] == 'server'
#     - (hostvars[groups[item][0]]['ep_operating_system']['distribution']|lower) == 'ubuntu'
#   tags:
#     - template

##### OpenSuse

# OUTDATED, need review
# - name: Templates >> autoyasts for OpenSuse
#   template:
#     src: "autoyast.xml.j2"
#     dest: /var/www/html/preboot_execution_environment/equipment_profiles/{{ item | replace(equipment_naming+'_','') | trim }}.autoyast.xml
#     mode: 0644
#     owner: "{{ pxe_stack_apache_user }}"
#     group: "{{ pxe_stack_apache_user }}"
#   with_items: "{{ j2_equipment_groups_list }}"
#   when:
#     - hostvars[groups[item][0]]['ep_equipment_type'] == 'server'
#     - (hostvars[groups[item][0]]['ep_operating_system']['distribution']|lower) == 'opensuse'
#   tags:
#     - template
#
# - name: Templates >> equipment_profiles for OpenSuse
#   template:
#     src: "configuration_opensuse.ipxe.j2"
#     dest: /var/www/html/preboot_execution_environment/equipment_profiles/{{ item | replace(equipment_naming+'_','') | trim }}.ipxe
#     mode: 0644
#     owner: "{{ pxe_stack_apache_user }}"
#     group: "{{ pxe_stack_apache_user }}"
#   with_items: "{{ j2_equipment_groups_list }}"
#   when:
#     - hostvars[groups[item][0]]['ep_equipment_type'] == 'server'
#     - (hostvars[groups[item][0]]['ep_operating_system']['distribution']|lower) == 'opensuse'
#   tags:
#     - template
#
# ##### Minimal, specific
#
# - name: Templates >> equipment_ipxe_configuration for Minimal Live Linux
#   template:
#     src: "configuration_minimal.ipxe.j2"
#     dest: /var/www/html/preboot_execution_environment/equipment_profiles/minimal.ipxe
#     mode: 0644
#     owner: "{{ pxe_stack_apache_user }}"
#     group: "{{ pxe_stack_apache_user }}"
#   tags:
#     - template

##### END

- name: copy █ Copy /usr/bin/bootset
  copy:
    src: bootset.py
    dest: /usr/bin/bootset
    mode: 0700
  tags:
    - template

- name: apache2_module █ Enable apache2 cgi module
  apache2_module:
    state: present
    name: "{{ j2_role_variables['apache_cgi_module'] }}"
  notify: service █ Restart pxe services
  when: ansible_facts.distribution != 'Fedora'

- name: "copy █ Copy {{ j2_role_variables['apache_conf_path'] }}/cgi.conf"
  copy:
    src: cgi.conf
    dest: "{{ j2_role_variables['apache_conf_path'] }}/cgi.conf"
    mode: 0644
  notify: service █ Restart pxe services

- name: copy █ Copy /var/www/cgi-bin/bootswitch.cgi
  copy:
    src: bootswitch.cgi
    dest: /var/www/cgi-bin/bootswitch.cgi
    mode: 0744
    owner: "{{ j2_role_variables['apache_user'] }}"
    group: "{{ j2_role_variables['apache_user'] }}"

- name: meta █ Run handler tasks to restart pxe services
  meta: flush_handlers

- name: "service █ Manage {{ (j2_role_variables['services_to_start'] + [pxe_stack_tftp_service | default(j2_role_variables['default_tftp_service'])]) | join(' ') }} state"
  service:
    name: "{{ item }}"
    enabled: "{{ (enable_services | bool) | ternary('yes','no') }}"
    state: "{{ (start_services | bool) | ternary('started', omit) }}"
  loop: "{{ j2_role_variables['services_to_start'] + [pxe_stack_tftp_service | default(j2_role_variables['default_tftp_service'])] }}"
  tags:
    - service

#jinja2: lstrip_blocks: True
#### Blue Banquise file ####
## {{ ansible_managed }}

options {
  listen-on port 53 {
    127.0.0.1;
{% for network in j2_management_networks %}
  {% if networks[network]['is_in_dns'] is defined and networks[network]['is_in_dns'] == true %}
    {% if networks[network]['services_ip']['dns_ip'] is defined and networks[network]['services_ip']['dns_ip'] is not none %}
    {{networks[network]['services_ip']['dns_ip']}};
    {% endif %}
  {% endif %}
{% endfor %}
  };

  listen-on-v6 port 53 { ::1; };
  directory 	"{{ dns_server_var_dir }}";
  dump-file 	"{{ dns_server_dump_file }}";
  statistics-file "{{ dns_server_statistics_file }}";
  memstatistics-file "{{ dns_server_mem_stats_file }}";

  allow-query {
    localhost;
{% for network in j2_management_networks %}
  {% if networks[network]['is_in_dns'] is defined and networks[network]['is_in_dns'] == true %}
    {{ networks[network]['subnet'] }}/{{ networks[network]['prefix'] }};
  {% endif %}
{% endfor %}
{% for allow_query in dns_server_allow_query %}
    {{ allow_query }};
{% endfor %}
  };

{% if external_dns.dns_server is defined and external_dns.dns_server %}
  forwarders {
  {% for forwarder in external_dns.dns_server %}
    {{ forwarder }};
  {% endfor %}
  {% for forwarder in dns_server_forwarders %}
    {{ forwarder }};
  {% endfor %}
  };
{% else %}
  recursion no;
{% endif %}

  dnssec-enable {{ dns_server_dnssec_enable }};
  dnssec-validation {{ dns_server_dnssec_validation }};
  dnssec-lookaside {{ dns_server_dnssec_lookaside }};

  /* Path to ISC DLV key */
  bindkeys-file "/etc/named.iscdlv.key";

  managed-keys-directory "{{ dns_server_managed_keys_dir }}";

  pid-file "/run/named/named.pid";
  session-keyfile "/run/named/session.key";

{% if dns_overrides is defined %}
  response-policy { zone "override"; };
{% endif %}
};

logging {
  channel default_debug {
    file "{{ dns_server_log_dir }}/named.run";
    severity dynamic;
  };
};

zone "." IN {
  type hint;
  file "{{ dns_server_root_hint_file }}";
};

zone "{{ domain_name }}" IN {
  type master;
  file "{{ dns_server_named_dir }}/forward.zone";
  allow-update { none; };
};

{% macro create_reverse_zone(network, octets) -%}
zone "{{ octets }}.in-addr.arpa" IN {
   type master;
   file "{{ dns_server_named_dir }}/{{ network }}.rr.zone";
   allow-update { none; };
};
{%- endmacro %}

{% for network, props in networks.items() %}
  {% if props['is_in_dns'] %}
    {% if props['prefix'] <= 8 %}
{{ create_reverse_zone(network, props['subnet'].split('.')[0]) }}
    {% elif props['prefix'] <= 16 %}
{{ create_reverse_zone(network, props['subnet'].split('.')[0:2]|reverse|join('.')) }}
    {% elif props['prefix'] <= 31 %}
{{ create_reverse_zone(network, props['subnet'].split('.')[0:3]|reverse|join('.')) }}
    {% endif %}
  {% endif %}
{% endfor %}

{% if dns_overrides is defined %}
zone "override" {
  type master;
  file "{{ dns_server_named_dir }}/override.zone";
};
{% endif %}

include "/etc/named.rfc1912.zones";
include "{{ dns_server_root_key_file }}";

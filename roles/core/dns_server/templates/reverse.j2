#jinja2: lstrip_blocks: True
;#### Blue Banquise file ####
;## {{ ansible_managed }} 

$TTL 86400
$ORIGIN {{ j2_dns_server_get_network | trim }}.in-addr.arpa.
$INCLUDE "{{ item }}.rr.soa"
@ IN NS {{ inventory_hostname }}.{{ domain_name }}.

{% macro create_record(octets, name) -%}
{{ octets }} IN PTR {{ name }}.
{%- endmacro %}

{% macro get_host_octets(ip, prefix) -%}
  {% if prefix <= 8 %}
    {{ ip.split('.')[1:4]|reverse|join('.') }}
  {% elif prefix <= 16 %}
    {{ ip.split('.')[2:4]|reverse|join('.') }}
  {% elif prefix <= 31 %}
    {{ ip.split('.')[3] }}
  {% endif %}
{%- endmacro %}

{# Macro to write host in file #}
{% macro write_host(host,host_dict,host_node_main_resolution_network) %}
  {% if host_dict['network_interfaces'] is defined and host_dict['network_interfaces'] is iterable %}
    {% for nic in host_dict['network_interfaces'] %}
      {% if nic.network is defined and nic.network == item and nic.ip4 is defined and nic.ip4 is not none and networks[item].prefix is defined %}
{{ create_record(get_host_octets(nic.ip4, networks[item].prefix)|trim, [[host, item]|join('-'), domain_name]|join('.')) }}
        {% if item == host_node_main_resolution_network %}
{{ create_record(get_host_octets(nic.ip4, networks[item].prefix)|trim, [host, domain_name]|join('.')) }}
        {% endif %}
        {% if host_dict['bmc'] is defined %}
          {% set bmc_args = host_dict['bmc'] %}
          {% if bmc_args.name is defined and bmc_args.name is not none and bmc_args.ip4 is defined and bmc_args.ip4 is not none and bmc_args.network is defined and bmc_args.network is not none and bmc_args.network == item %}
{{ create_record(get_host_octets(bmc_args.ip4, networks[bmc_args.network].prefix)|trim, [[bmc_args.name, bmc_args.network]|join('-'), domain_name]|join('.')) }}
            {% if item == host_node_main_resolution_network %}
{{ create_record(get_host_octets(bmc_args.ip4, networks[bmc_args.network].prefix)|trim, [bmc_args.name, domain_name]|join('.')) }}
            {% endif %}
          {% endif %}
        {% endif %}
      {% endif %}
    {% endfor %}
  {% endif %}
{% endmacro -%}

{% for host in groups['all'] -%}
{{ write_host(host,hostvars[host],hostvars[host]['j2_node_main_resolution_network']) }}
{%- endfor %}

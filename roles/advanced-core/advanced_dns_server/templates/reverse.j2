#jinja2: lstrip_blocks: True
;#### Blue Banquise file ####
;## {{ ansible_managed }}

$TTL 86400
$ORIGIN in-addr.arpa.
$INCLUDE "/var/named/reverse.soa"
@ IN NS {{ inventory_hostname }}.{{ domain_name }}.

{% for host in groups['all'] %}
  {% if hostvars[host]['network_interfaces'] is defined and hostvars[host]['network_interfaces'] is iterable %}
    {% for nic in hostvars[host]['network_interfaces'] %}
      {% if nic.ip4 is defined and nic.ip4 is not none %}
        {% if nic.network is defined and nic.network == hostvars[host]['j2_node_main_network'] %}
{{ nic.ip4.split('.')[3] }}.{{ nic.ip4.split('.')[2] }}.{{ nic.ip4.split('.')[1] }}.{{ nic.ip4.split('.')[0] }} IN PTR {{ host }}.{{ domain_name }}.
{{ nic.ip4.split('.')[3] }}.{{ nic.ip4.split('.')[2] }}.{{ nic.ip4.split('.')[1] }}.{{ nic.ip4.split('.')[0] }} IN PTR {{ host }}-{{ nic.network }}.{{ domain_name }}.
        {% elif nic.network is defined and nic.network is not none %}
{{ nic.ip4.split('.')[3] }}.{{ nic.ip4.split('.')[2] }}.{{ nic.ip4.split('.')[1] }}.{{ nic.ip4.split('.')[0] }} IN PTR {{ host }}-{{ nic.network }}.{{ domain_name }}.
        {% else %}
{# Do nothing, not in registered network #}
        {% endif %}
      {% endif %}
    {% endfor %}
    {% if hostvars[host]['bmc'] is defined %}
      {% set bmc_args = hostvars[host]['bmc'] %}
      {% if (bmc_args.name is defined and bmc_args.name is not none) and (bmc_args.ip4 is defined and bmc_args.ip4 is not none) and (bmc_args.network is defined and bmc_args.network is not none) %}
{{ bmc_args.ip4.split('.')[3] }}.{{ bmc_args.ip4.split('.')[2] }}.{{ bmc_args.ip4.split('.')[1] }}.{{ bmc_args.ip4.split('.')[0] }} IN PTR {{ bmc_args.name }}.{{ domain_name }}.
{{ bmc_args.ip4.split('.')[3] }}.{{ bmc_args.ip4.split('.')[2] }}.{{ bmc_args.ip4.split('.')[1] }}.{{ bmc_args.ip4.split('.')[0] }} IN PTR {{ bmc_args.name }}-{{ bmc_args.network }}.{{ domain_name }}.
      {% endif %}
    {% endif %}
  {% endif %}
{% endfor %}

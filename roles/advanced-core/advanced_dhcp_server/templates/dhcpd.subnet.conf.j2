#jinja2: lstrip_blocks: "True"
#### Blue Banquise file ####
## {{ansible_managed}}

{% if icebergs_system == true %}
  {% set range = groups[j2_current_iceberg] %}
  {% for host in groups[managements_group_name] %}
    {% if hostvars[host]['iceberg_master'] == j2_current_iceberg %}
{{ range.append(host) }}
    {% endif %}
  {% endfor %}
{% else %}
  {% set range = groups['all'] %}
{% endif %}

{% for host in range %}
  {% if hostvars[host]['network_interfaces'] is defined and hostvars[host]['network_interfaces'] is iterable %}
    {#- Define iPXE rom to use #}
    {% if hostvars[host]['ep_ipxe_driver'] == 'snponly' %} {# Select driver first #}
      {% set ipxe_driver = 'snponly_' %}
    {% elif hostvars[host]['ep_ipxe_driver'] == 'snp' %}
      {% set ipxe_driver = 'snp_' %}
    {% else %}{# Assume everything else is default driver #}
      {% set ipxe_driver = '' %}
    {% endif %}
    {% if hostvars[host]['ep_hardware']['cpu']['architecture'] == 'arm64' %} {# Now select architecture #}
      {% set ipxe_architecture = 'arm64' %}
    {% else %}{# Assume everything else is x86_64 #}
      {% set ipxe_architecture = 'x86_64' %}
    {% endif %}
    {% if hostvars[host]['ep_ipxe_embed'] is defined and
          hostvars[host]['ep_ipxe_embed'] == 'dhcpretry' %} {# Now select embed script #}
      {% set ipxe_embed = 'dhcpretry' %}
    {% else %}
      {% set ipxe_embed = 'standard' %}
    {% endif %}
    {% if hostvars[host]['ep_ipxe_platform'] == 'efi' %} {# Finally, build file name depending of platform and previous parameters #}
      {% set ipxe_rom_filename = (ipxe_architecture + '/' + ipxe_embed + '_' + ipxe_driver + 'ipxe.efi') %}
    {% else %}{# Assume everything else is pcbios #}
      {% set ipxe_rom_filename = (ipxe_architecture + '/' + ipxe_embed + '_undionly.kpxe') %}
    {% endif -%}

    {%- for nic in hostvars[host]['network_interfaces'] %}
      {% if (nic.network is defined and nic.network == item) and nic.ip4 is defined %}
        {% if nic.mac is defined %}

  host {{host}}-{{item}} { 
    option host-name "{{host}}";
    hardware ethernet {{nic.mac}};
    fixed-address {{nic.ip4}};
    filename "{{ipxe_rom_filename}}";
  }
        {% elif nic.dhcp_client_identifier is defined %}
  host {{host}}-{{item}} {
    option host-name "{{host}}";
    option dhcp-client-identifier {{nic.dhcp_client_identifier}};
    fixed-address {{nic.ip4}};
    filename "{{ipxe_rom_filename}}";
  }
        {% elif nic.host_identifier is defined %}
  host {{host}}-{{item}} {
    option host-name "{{host}}";
    host-identifier {{nic.host_identifier}};
    fixed-address {{nic.ip4}};
    filename "{{ipxe_rom_filename}}";
  }
        {% elif nic.match is defined %}{# Warning, only works in a shared network!! #}
  class "option_match_{{host}}" {
    match if (
      {{nic.match}}
    );
  }
  pool {
    option host-name "{{host}}";
    allow members of "option_match_{{host}}";
    range {{nic.ip4}};
    filename "{{ipxe_rom_filename}}";
  }
        {% endif %}
      {% endif %}
    {% endfor -%}

    {%- if hostvars[host]['bmc'] is defined %}
      {% set bmc_args = hostvars[host]['bmc'] %}
      {% if (bmc_args.network is defined and not none) and (bmc_args.network == item) and (bmc_args.name is defined and not none) and (bmc_args.ip4 is defined and not none) %}
        {% if bmc_args.mac is defined and not none %}

    host {{bmc_args.name}} {
      option host-name "{{bmc_args.name}}";
      hardware ethernet {{bmc_args.mac}};
      fixed-address {{bmc_args.ip4}};
    }
        {% elif bmc_args.dhcp_client_identifier is defined and not none %}
  host {{bmc_args.name}} {
    option host-name "{{bmc_args.name}}";
    option dhcp-client-identifier {{bmc_args.dhcp_client_identifier}};
    fixed-address {{bmc_args.ip4}};
  }
        {% elif bmc_args.host_identifier is defined and not none %}
  host {{bmc_args.name}} {
    option host-name "{{bmc_args.name}}";
    host-identifier {{bmc_args.host_identifier}};
    fixed-address {{bmc_args.ip4}};
  }
        {% elif bmc_args.match is defined and not none %}{# Warning, only works in a shared network!! #}
  class "option_match_{{bmc_args.name}}" {
    match if (
      {{bmc_args.match}}
    );
  }
  pool {
    option host-name "{{bmc_args.name}}";
    allow members of "option_match_{{bmc_args.name}}";
    range {{bmc_args.ip4}};
  }
        {% endif %}
      {% endif %}
    {% endif %}
  {% endif %}
{% endfor %}

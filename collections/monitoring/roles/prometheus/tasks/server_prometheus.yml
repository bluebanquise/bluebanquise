---
- name: group <|> Add prometheus group
  ansible.builtin.group:
    name: prometheus
    gid: "{{ prometheus_server_prometheus_user_gid }}"
    state: present

- name: user <|> Add prometheus user
  ansible.builtin.user:
    name: prometheus
    shell: /bin/false
    uid: "{{ prometheus_server_prometheus_user_uid }}"
    group: prometheus
    home: /var/lib/prometheus
    state: present

- name: package <|> Install prometheus package
  ansible.builtin.package:
    name: "{{ prometheus_server_prometheus_packages_to_install }}"
    state: present
  tags:
    - package

- name: template <|> Generate prometheus service file
  ansible.builtin.template:
    src: prometheus.service.j2
    dest: /etc/systemd/system/prometheus.service
    owner: root
    group: root
    mode: 0755
  notify:
    - systemd <|> Reload systemd configuration
    - service <|> Restart prometheus service
  tags:
    - template

- name: "firewalld <|> Add prometheus service to firewall's {{ prometheus_server_firewall_zone | default('public') }} zone"
  ansible.posix.firewalld:
    zone: "{{ prometheus_server_firewall_zone | default('public') }}"
    service: prometheus
    immediate: "yes"
    permanent: "yes"
    state: enabled
  when:
    - ansible_facts.os_family == "RedHat"
    - ep_firewall | default(false) | bool
  tags:
    - firewall

- name: file <|> Create Prometheus directories structure
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: 0750
    owner: prometheus
    group: prometheus
  loop:
    - /etc/prometheus/
    - /etc/prometheus/alerts/
    - /var/lib/prometheus

- name: Template <|> Generate /etc/prometheus/prometheus.yml
  ansible.builtin.template:
    src: prometheus.yml.j2
    dest: /etc/prometheus/prometheus.yml
    owner: prometheus
    group: prometheus
    mode: 0640
  notify: service <|> Restart prometheus service
  tags:
    - template

- name: copy <|> Copy /etc/prometheus/alerts/general.yml
  ansible.builtin.copy:
    src: alerts/general.yml
    dest: /etc/prometheus/alerts/general.yml
    owner: prometheus
    group: prometheus
    mode: 0640

- name: copy <|> Copy additional alerts to /etc/prometheus/alerts/
  ansible.builtin.copy:
    src: alerts/{{ item }}.yml
    dest: /etc/prometheus/alerts/{{ item }}.yml
    owner: prometheus
    group: prometheus
    mode: 0640
  loop: "{{ prometheus_server_additional_alerts }}"
  when: prometheus_server_additional_alerts is defined and prometheus_server_additional_alerts

- name: template <|> Generate users alerts to /etc/prometheus/alerts/user_alerts.yml
  ansible.builtin.template:
    src: alerts/user_alerts.yml.j2
    dest: /etc/prometheus/alerts/user_alerts.yml
    owner: prometheus
    group: prometheus
    mode: 0640
  when: prometheus_server_custom_alerts is defined and prometheus_server_custom_alerts is not none
  notify: service <|> Restart prometheus service

- name: file <|> Create service needed directory
  ansible.builtin.file:
    path: /etc/systemd/system/prometheus.service.d
    state: directory
    owner: root
    group: root
    mode: 0755
  when: prometheus_server_launch_parameters is defined and prometheus_server_launch_parameters is not none

- name: meta <|> Run handler tasks
  ansible.builtin.meta: flush_handlers

- name: service <|> Manage prometheus service state
  ansible.builtin.service:
    name: prometheus
    enabled: "{{ (prometheus_enable_services | default(bb_enable_services) | default(true) | bool) | ternary('yes', 'no') }}"
    state: "{{ (prometheus_start_services | default(bb_start_services) | default(true) | bool) | ternary('started', omit) }}"
  tags:
    - service

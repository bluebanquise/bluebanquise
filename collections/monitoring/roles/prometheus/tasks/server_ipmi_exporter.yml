---
- name: group <|> Add ipmi_exporter group
  ansible.builtin.group:
    name: ipmi_exporter
    gid: "{{ prometheus_server_ipmi_exporter_user_gid }}"
    state: present

- name: user <|> Add ipmi_exporter user
  ansible.builtin.user:
    name: ipmi_exporter
    shell: /bin/false
    uid: "{{ prometheus_server_ipmi_exporter_user_uid }}"
    group: ipmi_exporter
    home: /var/lib/ipmi_exporter
    state: present

- name: Package <|> Install ipmi_exporter and freeipmi packages
  ansible.builtin.package:
    name: "{{ prometheus_server_ipmi_exporter_packages_to_install }}"
    state: present
  tags:
    - package

- name: template <|> Generate ipmi_exporter service file
  ansible.builtin.template:
    src: ipmi_exporter.service.j2
    dest: /etc/systemd/system/ipmi_exporter.service
    owner: root
    group: root
    mode: 0755
  notify:
    - systemd <|> Reload systemd configuration
    - service <|> Restart ipmi_exporter service
  tags:
    - template

- name: file <|> Create ipmi_exporter directories structure
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: 0750
    owner: ipmi_exporter
    group: ipmi_exporter
  loop:
    - /etc/ipmi_exporter/

- name: Template <|> Generate /etc/ipmi_exporter/ipmi_config.yml
  ansible.builtin.template:
    src: ipmi_config.yml.j2
    dest: /etc/ipmi_exporter/ipmi_config.yml
    owner: ipmi_exporter
    group: ipmi_exporter
    mode: 0640
  notify: service <|> Restart ipmi_exporter service
  tags:
    - template

- name: meta <|> Run handler tasks
  ansible.builtin.meta: flush_handlers

- name: service <|> Manage ipmi_exporter service state
  ansible.builtin.service:
    name: ipmi_exporter
    enabled: "{{ (prometheus_enable_services | default(bb_enable_services) | default(true) | bool) | ternary('yes', 'no') }}"
    state: "{{ (prometheus_start_services | default(bb_start_services) | default(true) | bool) | ternary('started', omit) }}"
  tags:
    - service

---
- name: install <|> Add grafana group
  ansible.builtin.group:
    name: grafana
    gid: "{{ grafana_user_gid }}"
    state: present

- name: install <|> Add grafana user
  ansible.builtin.user:
    name: grafana
    shell: /bin/false
    uid: "{{ grafana_user_uid }}"
    group: grafana
    home: "{{ grafana_user_home }}"
    state: present

- name: install <|> Check for log file
  ansible.builtin.stat:
    path: "{{ grafana_logs_dir }}"
  register: log_exists

- name: install <|> Change log owner
  ansible.builtin.file:
    path: "{{ grafana_logs_dir }}"
    owner: "{{ grafana_user_uid }}"
    group: "{{ grafana_user_gid }}"
  when: log_exists.stat.exists

- name: "install <|> Add services to firewall's {{ grafana_firewall_zone | default('public') }} zone"
  ansible.posix.firewalld:
    zone: "{{ grafana_firewall_zone | default('public') }}"
    service: "{{ item }}"
    immediate: "yes"
    permanent: "yes"
    state: enabled
  when:
    - ansible_facts.os_family == "RedHat"
    - ep_firewall | default(false) | bool
  loop: "{{ grafana_firewall_services_to_add }}"
  tags:
    - firewall

- name: "install <|> Install {{ grafana_packages_to_install | join(' ') }} packages"
  ansible.builtin.package:
    name: "{{ grafana_packages_to_install }}"
    state: present
  when: not grafana_install_oss_packages
  tags:
    - install

- name: "install <|> import grafana gpg key"
  ansible.builtin.rpm_key:
    key: https://rpm.grafana.com/gpg.key
    state: present
  when: grafana_install_oss_packages
  tags:
    - install

- name: "install <|> Install {{ grafana_packages_to_install | join(' ') }} OSS packages"
  ansible.builtin.package:
    name: "https://dl.grafana.com/oss/release/{{ item }}"
    state: present
  when: grafana_install_oss_packages
  loop: "{{ grafana_packages_to_install }}"
  tags:
    - install

- name: service <|> Manage grafana-server state
  ansible.builtin.service:
    name: "{{ item }}"
    enabled: "{{ (enable_services | bool) | ternary('yes','no') }}"
    state: "{{ (start_services | bool) | ternary('started', omit) }}"
  loop: "{{ grafana_services_to_start }}"
  tags:
    - service

{{ ansible_managed | comment }}
# The containers configuration file specifies all of the available configuration
# command-line options/flags for container engine tools like Podman & Buildah,
# but in a TOML format that can be easily modified and versioned.

# Please refer to containers.conf(5) for details of all configuration options.
# Not all container engines implement all of the options.
# All of the options have hard coded defaults and these options will override
# the built in defaults. Users can then override these options via the command
# line.

[containers]
default_capabilities = [
  "NET_RAW",
  "CHOWN",
  "DAC_OVERRIDE",
  "FOWNER",
  "FSETID",
  "KILL",
  "NET_BIND_SERVICE",
  "SETFCAP",
  "SETGID",
  "SETPCAP",
  "SETUID",
  "SYS_CHROOT",
]

default_sysctls = [
  "net.ipv4.ping_group_range=0 0",
]

log_driver = "journald"
log_size_max = -1
label = true

[network]

# Network backend determines what network driver will be used to set up and tear down container networks.
# Valid values are "cni" and "netavark".
# The default value is empty which means that it will automatically choose CNI or netavark.
# If there are already containers/images or CNI networks preset it will choose CNI.
network_backend = ""

cni_plugin_dirs = [
               "/usr/libexec/cni",
               "/usr/lib/cni",
               "/usr/local/lib/cni",
               "/opt/cni/bin"
]

default_network = "podman"

# Path to the directory where network configuration files are located.
# For the CNI backend the default is "/etc/cni/net.d" as root
# and "$HOME/.config/cni/net.d" as rootless.
#network_config_dir = "/etc/cni/net.d/"

[engine]
cgroup_manager = "{{ podman_conf_cgroup_manager }}"

conmon_env_vars = [
                "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
]

conmon_path = [
            "/usr/libexec/podman/conmon",
            "/usr/libexec/crio/conmon",
            "/usr/local/lib/podman/conmon",
            "/usr/local/libexec/crio/conmon",
            "/usr/bin/conmon",
            "/usr/sbin/conmon",
            "/usr/lib/podman/bin/conmon",
            "/usr/lib/crio/bin/conmon"
]

events_logger = "{{ podman_conf_events_logger }}"
enable_port_reservation = true
image_default_transport = "docker://"
infra_command = "/pause"
infra_image = "k8s.gcr.io/pause:3.1"

no_pivot_root = false
num_locks = 2048

# Default runtime will be searched for on the system using the priority:
# "crun", "runc", "runj", "kata", "runsc", "ocijail"
runtime = ""

# Path to the tmp directory, for libpod runtime content.
# Defaults to $XDG_RUNTIME_DIR/libpod/tmp as rootless and /run/libpod/tmp as rootful.
#tmp_dir = "/var/run/libpod"

static_dir = "{{ getent_passwd[item.key][4] }}/.local/share/containers/storage/libpod"
volume_path = "{{ getent_passwd[item.key][4] }}/.local/share/containers/storage/volumes"

[engine.runtimes]

crun = [
		"/usr/bin/crun",
		"/usr/sbin/crun",
		"/usr/local/bin/crun",
		"/usr/local/sbin/crun",
		"/sbin/crun",
		"/bin/crun",
		"/run/current-system/sw/bin/crun",
]

runc = [
            "/usr/bin/runc",
            "/usr/sbin/runc",
            "/usr/local/bin/runc",
            "/usr/local/sbin/runc",
            "/sbin/runc",
            "/bin/runc",
            "/usr/lib/cri-o-runc/sbin/runc"
]

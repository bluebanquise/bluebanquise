#jinja2: lstrip_blocks: "True"
#### Blue Banquise file ####
## {{ ansible_managed }}

SERVER execpath="{{ conman_execpath }}"
SERVER syslog="daemon"
SERVER logdir="/var/log/conman"
GLOBAL log="/var/log/conman/%N.log"
SERVER timestamp=1h
GLOBAL logopts="timestamp"

{% for host in (j2_hosts_range | sort) -%}
  {% if (hostvars[host]['ep_equipment_type'] | default("server")) == "server" %}
    {% if hostvars[host]['bmc'] is defined and hostvars[host]['bmc']['name'] is defined %}
      {# Gather BMC network settings #}
      {% if hostvars[host]['bmc']['ip4'] is defined %}{# BMC is defined inside host #}
        {% set host_bmc = hostvars[host]['bmc'] %}
        {% set credentials_host = host %}{# Define host as credentials source #}
      {% else %}{# BMC is defined outside host #}
        {% set host_bmc = hostvars[hostvars[host]['bmc']['name']]['network_interfaces'][0] %}
        {% set credentials_host = hostvars[host]['bmc']['name'] %}{# Define external bmc as credentials source #}
      {% endif %}
      {# Gather BMC credentials settings #}
      {% if hostvars[credentials_host]['ep_host_authentication'] is defined %}{# Check if host_authentication is defined #}
        {% set host_bmc_user = (hostvars[credentials_host]['ep_host_authentication'] | selectattr('protocol','match','IPMI') | map(attribute='user') | list | first | default(none)) %}
        {% set host_bmc_password = (hostvars[credentials_host]['ep_host_authentication'] | selectattr('protocol','match','IPMI') | map(attribute='password') | list | first | default(none)) %}
      {% endif %}
      {% if host_bmc_user is defined and host_bmc_user is not none and host_bmc_password is defined and host_bmc_password is not none %}
console name="{{ host }}" dev="ipmitool.exp {{ host_bmc['ip4'] }} {{ host_bmc_user }} {{ host_bmc_password }}"
      {% endif %}
    {% endif %}
  {% endif %}
{% endfor %}

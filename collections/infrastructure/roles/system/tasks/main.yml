---

- name: "package <|> Install packages"
  ansible.builtin.package:
    name: "{{ item.name }}"
    state: "{{ item.state }}"
    use: "{{ item.use | default(omit) }}"
  loop: "{{ system.package }}"
  when: system.package is defined and system.package is iterable

- name: "template <|> Render requested templates"
  ansible.builtin.template:
    attributes: "{{ item.attributes | default(omit) }}"
    backup: "{{ item.backup | default(omit) }}"
    block_end_string: "{{ item.block_end_string | default(omit) }}"
    block_start_string: "{{ item.block_start_string | default(omit) }}"
    comment_end_string: "{{ item.comment_end_string | default(omit) }}"
    comment_start_string: "{{ item.comment_start_string | default(omit) }}"
    dest: "{{ item.dest }}"
    follow: "{{ item.follow | default(omit) }}"
    force: "{{ item.force | default(omit) }}"
    group: "{{ item.group | default(omit) }}"
    lstrip_blocks: "{{ item.lstrip_blocks | default(omit) }}"
    mode: "{{ item.mode | default(omit) }}"
    newline_sequence: "{{ item.newline_sequence | default(omit) }}"
    output_encoding: "{{ item.output_encoding | default(omit) }}"
    owner: "{{ item.owner | default(omit) }}"
    selevel: "{{ item.selevel | default(omit) }}"
    serole: "{{ item.serole | default(omit) }}"
    setype: "{{ item.setype | default(omit) }}"
    seuser: "{{ item.seuser | default(omit) }}"
    src: generic.j2
    trim_blocks: "{{ item.trim_blocks | default(omit) }}"
    unsafe_writes: "{{ item.unsafe_writes | default(omit) }}"
    validate: "{{ item.validate | default(omit) }}"
    variable_end_string: "{{ item.variable_end_string | default(omit) }}"
    variable_start_string: "{{ item.variable_start_string | default(omit) }}"
  loop: "{{ system.template }}"
  when: system.template is defined and system.template is iterable

- name: "lineinfile <|> Edit lines in files"
  ansible.builtin.lineinfile:   
    attributes: "{{ item.attributes | default(omit) }}"
    backrefs: "{{ item.backrefs | default(omit) }}"
    backup: "{{ item.backup | default(omit) }}"
    create: "{{ item.create | default(omit) }}"
    firstmatch: "{{ item.firstmatch | default(omit) }}"
    group: "{{ item.group | default(omit) }}"
    insertafter: "{{ item.insertafter | default(omit) }}"
    insertbefore: "{{ item.insertbefore | default(omit) }}"
    line: "{{ item.line | default(omit) }}"
    mode: "{{ item.mode | default(omit) }}"
    others: "{{ item.others | default(omit) }}"
    owner: "{{ item.owner | default(omit) }}"
    path: "{{ item.path }}"
    regexp: "{{ item.regexp | default(omit) }}"
    search_string: "{{ item.search_string | default(omit) }}"
    selevel: "{{ item.selevel | default(omit) }}"
    serole: "{{ item.serole | default(omit) }}"
    setype: "{{ item.setype | default(omit) }}"
    seuser: "{{ item.seuser | default(omit) }}"
    state: "{{ item.state | default(omit) }}"
    unsafe_writes: "{{ item.unsafe_writes | default(omit) }}"
    validate: "{{ item.validate | default(omit) }}"
  loop: "{{ system.lineinfile }}"
  when: system.lineinfile is defined and system.lineinfile is iterable

- name: "file <|> Create/manage requested files/folders"
  ansible.builtin.file:
    access_time: "{{ item.access_time | default(omit) }}"
    access_time_format: "{{ item.access_time_format | default(omit) }}"
    attributes: "{{ item.attributes | default(omit) }}"
    follow: "{{ item.follow | default(omit) }}"
    force: "{{ item.force | default(omit) }}"
    group: "{{ item.group | default(omit) }}"
    mode: "{{ item.mode | default(omit) }}"
    modification_time: "{{ item.modification_time | default(omit) }}"
    modification_time_format: "{{ item.modification_time_format | default(omit) }}"
    owner: "{{ item.owner | default(omit) }}"
    path: "{{ item.path }}"
    recurse: "{{ item.recurse | default(omit) }}"
    selevel: "{{ item.selevel | default(omit) }}"
    serole: "{{ item.serole | default(omit) }}"
    setype: "{{ item.setype | default(omit) }}"
    seuser: "{{ item.seuser | default(omit) }}"
    src: "{{ item.src | default(omit) }}"
    state: "{{ item.state | default(omit) }}"
    unsafe_writes: "{{ item.unsafe_writes | default(omit) }}"
  loop: "{{ system.file }}"
  when: system.file is defined and system.file is iterable


- name: "service <|> Manage services"
  ansible.builtin.service:
    arguments: "{{ item.arguments | default(omit) }}"
    enabled: "{{ item.enabled | default(omit) }}"
    name: "{{ item.name }}"
    pattern: "{{ item.pattern | default(omit) }}"
    runlevel: "{{ item.runlevel | default(omit) }}"
    sleep: "{{ item.sleep | default(omit) }}"
    state: "{{ item.state | default(omit) }}"
    use: "{{ item.use | default(omit) }}"
  loop: "{{ system.service }}"
  when: system.service is defined and system.service is iterable

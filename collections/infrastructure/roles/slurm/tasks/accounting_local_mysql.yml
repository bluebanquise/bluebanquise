---
- name: "package <|> Install {{ slurm_packages_to_install['accounting_mysql'] | join(' ') }}"
  ansible.builtin.package:
    name: "{{ slurm_packages_to_install['accounting_mysql'] }}"
    state: present
  tags:
    - package

- name: "template <|> Generate {{ slurm_mysql_cnf_dir }}/slurmdbd.cnf"
  ansible.builtin.template:
    src: slurmdbd.cnf.j2
    dest: "{{ slurm_mysql_cnf_dir }}/slurmdbd.cnf"
    owner: root
    group: root
    mode: 0644
  tags:
    - template

- name: service <|> Manage MariaDB state
  ansible.builtin.service:
    name: mariadb
    enabled: "{{ (slurm_enable_services | default(bb_enable_services) | default(true) | bool) | ternary('yes', 'no') }}"
    state: "{{ (slurm_start_services | default(bb_start_services) | default(true) | bool) | ternary('started', omit) }}"

- name: file <|> Configure MariaDB to listen on all interfaces
  lineinfile:
    path: /etc/mysql/mariadb.conf.d/50-server.cnf
    regexp: '^bind-address\s*=\s*127\.0\.0\.1'
    line: 'bind-address = 0.0.0.0'
    backrefs: yes
  when:
    - ansible_distribution == 'Ubuntu'
  notify: service <|> restart mariadb
  register: mariadb_config

- name: meta <|> Run handler tasks to restart services
  ansible.builtin.meta: flush_handlers

- name: mysql_db <|> Create slurm_acct_db database
  community.mysql.mysql_db:
    name: slurm_acct_db
    state: present
    login_unix_socket: "{{ slurm_accounting_mysql_unix_socket }}"
  when: slurm_accounting_mysql_create_database

- name: mysql_user <|> Ensure slurm user exists in the database
  community.mysql.mysql_user:
    name: "{{ slurm_accounting_mysql_slurm_user }}"
    password: "{{ slurm_accounting_mysql_slurm_password }}"
    state: present
    priv: 'slurm_acct_db.*:ALL'
    column_case_sensitive: false
    login_unix_socket: "{{ slurm_accounting_mysql_unix_socket }}"
  when:
    - slurm_accounting_mysql_create_user

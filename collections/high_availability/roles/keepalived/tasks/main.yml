---
- name: include_vars <|> Gather OS specific variables
  # This task gathers variables defined in OS specific files.
  #
  # Search vars in:
  #  - <distribution>_<major>.yml    # eg. CentOS_8.yml
  #  - <os_family>_<major>.yml       # eg. RedHat_8.yml
  #  - <distribution>.yml            # eg. CentOS.yml
  #  - <os_family>.yml               # eg. RedHat.yml
  #
  # If no OS specific file is found, the role will default to vars/main.yml
  #
  ansible.builtin.include_vars: "{{ item }}"
  with_first_found:
    - files:
        - "vars/{{ ansible_facts.distribution | replace(' ','_') }}_{{ ansible_facts.distribution_version }}.yml"
        - "vars/{{ ansible_facts.distribution | replace(' ','_') }}_{{ ansible_facts.distribution_major_version }}.yml"
        - "vars/{{ ansible_facts.os_family }}_{{ ansible_facts.distribution_version }}.yml"
        - "vars/{{ ansible_facts.os_family }}_{{ ansible_facts.distribution_major_version }}.yml"
        - "vars/{{ ansible_facts.distribution | replace(' ','_') }}.yml"
        - "vars/{{ ansible_facts.os_family }}.yml"
      skip: true
  tags:
    - always

- name: include_tasks <|> Use OS dedicated firewall task
  ansible.builtin.include_tasks: "{{ outer_item }}"
  with_first_found:
    - files:
        - "{{ ansible_facts.distribution | replace(' ','_') }}_{{ ansible_facts.distribution_version }}/firewall.yml"
        - "{{ ansible_facts.distribution | replace(' ','_') }}_{{ ansible_facts.distribution_major_version }}/firewall.yml"
        - "{{ ansible_facts.os_family | replace(' ','_') }}_{{ ansible_facts.distribution_version }}/firewall.yml"
        - "{{ ansible_facts.os_family | replace(' ','_') }}_{{ ansible_facts.distribution_major_version }}/firewall.yml"
        - "{{ ansible_facts.distribution | replace(' ','_') }}/firewall.yml"
        - "{{ ansible_facts.os_family | replace(' ','_') }}/firewall.yml"
      skip: true
  loop_control:
    loop_var: outer_item
  tags:
    - internal
    - firewall

- name: "package <|> Install {{ keepalived_packages_to_install | join(' ') }}"
  ansible.builtin.package:
    name: "{{ keepalived_packages_to_install }}"
    state: present
  tags:
    - package

<<<<<<< HEAD:roles/core/keepalived/tasks/main.yml
- name: "template <|> Generate {{ keepalived_conf_file }}"
=======
- name: file <|> Create /var/log/rsyslog directory
  ansible.builtin.file:  # noqa risky-file-permissions
    path: /var/log/rsyslog
    setype: var_log_t
    state: directory
    recurse: yes
  when:
    - ansible_facts.os_family == "RedHat"
    - ansible_facts.selinux.status == "enabled"

- name: "template <|> Generate {{ log_server_rsyslog_conf_path }}"
>>>>>>> 3d255f14a4c00b7d47aa29df356a38f1dd442dad:roles/core/log_server/tasks/main.yml
  ansible.builtin.template:
    src: keepalived.conf.j2
    dest: "{{ keepalived_conf_file }}"
    owner: root
    group: root
    mode: 0644
  notify: service <|> Restart dhcp server
  tags:
    - template

- name: meta <|> Run handler tasks to restart dhcp services
  ansible.builtin.meta: flush_handlers

- name: "service <|> Manage {{ keepalived_services_to_start | join(' ') }} state"
  ansible.builtin.service:
    name: "{{ item }}"
    enabled: "{{ (keepalived_enable_services | default(bb_enable_services) | default(true) | bool) | ternary('yes', 'no') }}"
    state: "{{ (keepalived_start_services | default(bb_start_services) | default(true) | bool) | ternary('started', omit) }}"
  loop: "{{ keepalived_services_to_start }}"
  tags:
    - service

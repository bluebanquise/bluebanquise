---
- name: registry █ Create local directory
  ansible.builtin.file:
    path: "{{ podman_local_registry_dir }}"
    state: directory
    owner: "{{ podman_local_registry_owner | default(root) }}"
    group: "{{ podman_local_registry_group | default(root) }}"
    mode: '0644'

- name: registry █ Check the path of the registry container
  ansible.builtin.stat:
    path: "{{ podman_registry_container_path }}"
  register: p

- name: registry █ Load local registry container
  ansible.builtin.command: "podman load -i {{ podman_registry_container_path }}"
  changed_when: false

- name: firewalld █ "Add registry port to firewall's {{ ha_firewall_zone | default('public') }} zone"
  ansible.posix.firewalld:
    zone: "{{ ha_firewall_zone | default('public') }}"
    port: "{{ podman_local_registry_port }}/tcp"
    immediate: "yes"
    permanent: "yes"
    state: enabled
  when: ep_firewall | default(false) | bool
  tags:
    - firewall

- name: template █ Install registry service file
  ansible.builtin.template:
    src: registry.service.j2
    dest: /etc/systemd/system/registry.service
    owner: root
    group: root
    force: true
    mode: 0655
  tags:
    - service

- name: systemd █ Reload systemd
  ansible.builtin.systemd:
    daemon_reload: true
  tags:
    - service

- name: service █ Manage registry state
  ansible.builtin.service:
    name: registry
    enabled: "{{ (enable_services | bool) | ternary('yes','no') }}"
    state: "{{ (start_services | bool) | ternary('started', omit) }}"
  tags:
    - service

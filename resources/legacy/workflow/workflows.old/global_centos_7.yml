---

# Global run on CentOS 7
# Using docker environment

name: global CentOS 7
on:
  push:
    branches:
      - master
  pull_request:

jobs:
  global_run_centos_7:
    name: Global deployment on CentOS 7
    runs-on: ubuntu-20.04
    env:
      ANSIBLE_CONFIG: /var/lib/bluebanquise/ansible.cfg
      PY_COLORS: '1'
      ANSIBLE_FORCE_COLOR: '1'
    strategy:
      matrix:
        inventory: [standard]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create centos systemd able image
        run: docker build -t centos:7_systemd -f ./resources/docker/Dockerfile_CentOS_7_systemd .

      - name: Set dummy interface
        run: sudo modprobe -v dummy numdummies=2; sudo ip addr add 10.10.0.1/16 dev dummy0; ip a;

      - name: Start container
        run: docker run -d --net=host --name mg1 --tmpfs /tmp --tmpfs /run -v /sys/fs/cgroup:/sys/fs/cgroup:ro centos:7_systemd

      - name: Setup container
        run: docker exec mg1 bash -c "mkdir -p /opt/software; mkdir -p /opt/software_client; useradd test-user;"

      - name: Prepare bluebanquise folder
        run: sudo mkdir /var/lib/bluebanquise; sudo chown -R $(id -u):$(id -g) /var/lib/bluebanquise; cp -a * /var/lib/bluebanquise;

      - name: Prepare bluebanquise environment
        run: |
          cp -a /var/lib/bluebanquise/resources/workflow/inventory_${{ matrix.inventory }} /var/lib/bluebanquise/inventory
          cp -a /var/lib/bluebanquise/resources/workflow/playbooks /var/lib/bluebanquise

      - name: Install packages
        run: pip3 install -r requirements.txt

      - name: Install collections
        run: ansible-galaxy collection install community.general

      - name: Role test - http_server
        run: ansible-playbook /var/lib/bluebanquise/playbooks/managements.yml --connection=docker --limit mg1 -t http_server --diff -e "ansible_connection=docker ansible_python_interpreter=/usr/bin/python3 ep_firewall=false" -u root

      - name: Role test - repositories
        run: ansible-playbook /var/lib/bluebanquise/playbooks/managements.yml --connection=docker --limit mg1 -t repositories --diff -e "ansible_connection=docker ansible_python_interpreter=/usr/bin/python3 ep_firewall=false" -u root 

      - name: Role test - dhcp_server
        run: ansible-playbook /var/lib/bluebanquise/playbooks/managements.yml --connection=docker --limit mg1 -t dhcp_server --diff -e "ansible_connection=docker ansible_python_interpreter=/usr/bin/python3 ep_firewall=false" -u root  

      - name: Role test - dns_server
        run: ansible-playbook /var/lib/bluebanquise/playbooks/managements.yml --connection=docker --limit mg1 -t dns_server --diff -e "ansible_connection=docker ansible_python_interpreter=/usr/bin/python3 ep_firewall=false" -u root 

      - name: Role test - pxe_stack
        run: ansible-playbook /var/lib/bluebanquise/playbooks/managements.yml --connection=docker --limit mg1 -t pxe_stack --skip-tags package,service --diff -e "ansible_connection=docker ansible_python_interpreter=/usr/bin/python3 ep_firewall=false" -u root 

      - name: Role test - time
        run: ansible-playbook /var/lib/bluebanquise/playbooks/managements.yml --connection=docker --limit mg1 -t time --diff -e "ansible_connection=docker ansible_python_interpreter=/usr/bin/python3 ep_firewall=false" -u root

      # - name: Role test - auditd
      #   run: ansible-playbook /var/lib/bluebanquise/playbooks/managements.yml --connection=docker --limit mg1 -t auditd --diff -e "ansible_connection=docker ansible_python_interpreter=/usr/bin/python3 ep_firewall=false" -u root

      - name: Role test - clustershell
        run: ansible-playbook /var/lib/bluebanquise/playbooks/managements.yml --connection=docker --limit mg1 -t clustershell --diff -e "ansible_connection=docker ansible_python_interpreter=/usr/bin/python3 ep_firewall=false" -u root

      - name: Role test - ssh
        run: |
          ansible-playbook /var/lib/bluebanquise/playbooks/managements.yml --connection=docker --limit mg1 -t ssh_client --diff -e "ansible_connection=docker ansible_python_interpreter=/usr/bin/python3 ep_firewall=false" -u root
          ansible-playbook /var/lib/bluebanquise/playbooks/managements.yml --connection=docker --limit mg1 -t ssh_remote_keys --diff -e "ansible_connection=docker ansible_python_interpreter=/usr/bin/python3 ep_firewall=false" -u root

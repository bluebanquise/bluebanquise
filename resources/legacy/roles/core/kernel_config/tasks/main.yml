- name: package █ Install grubby
  ansible.builtin.package:
    name: grubby
    state: present

- name: shell ░ Get current kernel parameters
  ansible.builtin.shell: "set -o pipefail && grubby --info=DEFAULT | grep args"
  args:
    executable: /bin/bash
  register: current_kernel_parameters
  changed_when: False

- name: command █ Update kernel parameters
  ansible.builtin.command: "grubby --args='{{ item }}' --update-kernel=DEFAULT"
  loop: "{{ ep_kernel_parameters.split(' ') | default([]) }}"
  when:
    - ep_kernel_parameters is defined and ep_kernel_parameters is not none
    - item not in current_kernel_parameters.stdout

- name: sysctl █ Update sysctl parameters
  ansible.builtin.sysctl:
    name: "{{ item.key }}"
    value: "{{ item.value }}"
    state: present
    reload: "{{ kernel_config_sysctl_reload | ternary('yes','no') }}"
  with_dict: "{{ ep_sysctl }}"
  when: ep_sysctl is defined

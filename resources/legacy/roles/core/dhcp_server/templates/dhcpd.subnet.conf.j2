#jinja2: lstrip_blocks: "True"
#### Blue Banquise file ####
## {{ ansible_managed }}

{%- for host in (j2_hosts_range | sort) %}
  {% if hostvars[host]['network_interfaces'] is defined and hostvars[host]['network_interfaces'] is iterable and hostvars[host]['network_interfaces'] is not mapping and hostvars[host]['network_interfaces'] is not string %}
    {% for nic in hostvars[host]['network_interfaces'] %}
      {% if nic.network is defined and nic.network == item and (nic.ip4 is defined and (nic.ip4 | ansible.utils.ipaddr)) and (nic.mac is defined and (nic.mac | ansible.utils.hwaddr)) %}

host {{ host }}-{{ item }} {
  option host-name "{{ host }}";
  hardware ethernet {{ nic.mac | ansible.utils.hwaddr('linux') }};
  fixed-address {{ nic.ip4 }};
}
      {% endif %}
    {% endfor -%}

    {%- if hostvars[host]['bmc'] is defined %}
      {% set bmc_args = hostvars[host]['bmc'] %}
      {% if bmc_args.network is defined and bmc_args.network == item and (bmc_args.name is defined and bmc_args.name is not none) and (bmc_args.mac is defined and (bmc_args.mac | ansible.utils.hwaddr)) and (bmc_args.ip4 is defined and (bmc_args.ip4 | ansible.utils.ipaddr)) %}
  host {{ bmc_args.name }} {
    option host-name "{{ bmc_args.name }}";
    hardware ethernet {{ bmc_args.mac | ansible.utils.hwaddr('linux') }};
    fixed-address {{ bmc_args.ip4 }};
  }
      {% endif %}
    {% endif %}
  {% endif %}
{% endfor %}

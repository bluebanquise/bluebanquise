#jinja2: lstrip_blocks: "True"
#cloud-config
autoinstall:
  version: 1
  apt:
    geoip: false
    preserve_sources_list: {{ pxe_stack_ubuntu_preserve_sources_list }}
  keyboard: {layout: {{ (hostvars[groups[item][0]]['ep_keyboard_layout'] | default(pxe_stack_ep_keyboard_layout)) | lower }}, toggle: null, variant: ''}
  locale: {{ hostvars[groups[item][0]]['ep_system_language'] | default(pxe_stack_ep_system_language) }}
  user-data:
{% if not pxe_stack_enable_root %}
    users:
      - name: {{ pxe_stack_sudo_user }}
        ssh-authorized-keys:
        {% for ssh_key in (hostvars[groups[item][0]]['ep_admin_ssh_keys'] | default(pxe_stack_ep_admin_ssh_keys)) %}
          - {{ ssh_key }}
        {% endfor %}
        {% if pxe_stack_sudo_is_passwordless %}
        sudo: ['ALL=(ALL:ALL) NOPASSWD:ALL']
        {% else %}
        sudo: ['ALL=(ALL:ALL) ALL']
        {% endif %}
        groups: sudo
        shell: /bin/bash
        passwd: "{{ hostvars[groups[item][0]]['ep_admin_password_sha512'] | default(pxe_stack_ep_admin_password_sha512) }}"
    disable_root: true
{% else %}
    disable_root: false
{% endif %}
  ssh:
    install-server: true
    allow-pw: true

{{ (hostvars[groups[item][0]]['ep_partitioning'] | default(pxe_stack_ep_partitioning) | default(pxe_stack_ubuntu_automatic_partitioning, true)) | indent(2, True) }}
 
  late-commands:
{% if pxe_stack_enable_root %}
    - mkdir /target/root/.ssh
    {% for ssh_key in (hostvars[groups[item][0]]['ep_admin_ssh_keys'] | default(pxe_stack_ep_admin_ssh_keys)) %}
    - echo "{{ ssh_key }}" >> /target/root/.ssh/authorized_keys
    {% endfor %}
    - sed -i "s/^#PermitRootLogin.*\$/PermitRootLogin yes/g" /target/etc/ssh/sshd_config
    - sed -i 's|^root:.:|root:{{ hostvars[groups[item][0]]['ep_admin_password_sha512'] | default(pxe_stack_ep_admin_password_sha512) }}:|' /target/etc/shadow
{% endif %}
{% if not pxe_stack_ubuntu_preserve_sources_list %}
    - echo " " > /target/etc/apt/sources.list
{% endif %}
{% if (hostvars[groups[item][0]]['ep_preserve_efi_first_boot_device'] | default(pxe_stack_ep_preserve_efi_first_boot_device)) == true %}
    - sh -c '[ -d /sys/firmware/efi ] && efibootmgr -o $(efibootmgr | grep BootCurrent | cut -d" " -f2),$(efibootmgr | grep BootOrder | sed "s/BootOrder:\ //" | sed "s/$(efibootmgr | grep BootCurrent | cut -d" " -f2),//") || echo "Not an EFI system, skipping"'
{% endif %}
    - curtin in-target --target=/target -- sh -c 'for I in `cat /proc/cmdline | tr " " "\n" | grep -E "^(node_hostname|ipxe_next_server)="` ; do eval $I; done; curl -s -k http://$ipxe_next_server/cgi-bin/bootswitch.cgi --data "node=$node_hostname&boot=disk"'

